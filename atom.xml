<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[不歸錄]]></title>
  <link href="http://tonytonyjan.net/atom.xml" rel="self"/>
  <link href="http://tonytonyjan.net/"/>
  <updated>2013-11-23T18:18:22+08:00</updated>
  <id>http://tonytonyjan.net/</id>
  <author>
    <name><![CDATA[大兜]]></name>
    <email><![CDATA[tonytonyjan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TJStamp 印章產生器]]></title>
    <link href="http://tonytonyjan.net/2013/10/23/tjstamp-yin-zhang-chan-sheng-qi/"/>
    <updated>2013-10-23T14:52:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/10/23/tjstamp-yin-zhang-chan-sheng-qi</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/tjstamp.png"></p>

<ul>
<li><a href="https://github.com/tonytonyjan/tjstamp">Github</a></li>
<li><a href="http://tjstamp.tonytonyjan.net">Demo 網址</a></li>
</ul>


<p>因為工作上需要用到某個能夠產生印章的功能，我在台大的學生活動中心花了一個下午完成了這個小工具，可以支援 1 ~ 4 個字的印章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Tuesday Taiwan #26]]></title>
    <link href="http://tonytonyjan.net/2013/09/30/ruby-tuesday-taiwan-number-26/"/>
    <updated>2013-09-30T20:07:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/09/30/ruby-tuesday-taiwan-number-26</id>
    <content type="html"><![CDATA[<h2>Topic 1</h2>

<p class='info info' data-title='Chris Sun： 重構輕旅'>介紹如何在重構的過程中，試著重新認識領域甚至發掘潛在問題。</p>


<p>糟糕……我聽不太懂啊……Orz，另外其實投影片大部分是 code，我這裡就不做筆記了XD（偷懶）</p>

<p>其中有提到 Ruby 還沒有很方便的 IDE（講者表示不比 10 年前的 Java IDE）。我本身不用 IDE，當然重構可能也都是靠 grep、sed、regular expression，這類東西去做換名字或是複製貼上等等的工作，沒有遇到什麼大問題（不過應該是我程式寫不夠大的關係XD）。</p>

<h2>Topic 2</h2>

<p class='info info' data-title='Kevin Wang：別再偷我App裡的金幣, 淺談Server端In-App Purchase的處理與驗證'>介紹有關用Rails處理處理手機APP的 In-app Purchase的運作流程以及注意要點和加速方式, 請注意本場的長度將會有1小時。</p>


<h3>In-App Purchase (IAP)</h3>

<ul>
<li>One-Time Purchase/Consumable</li>
<li>Subscription</li>
<li>Auto-renewable Subscription</li>
</ul>


<h3>處理 IAP 流程</h3>

<ol>
<li>接受 App 傳來的資訊</li>
<li>資料驗證</li>
<li>三方驗證（TPV）</li>
<li>紀錄交易內容</li>
<li>更新使用者？？</li>
<li>回傳結果</li>
</ol>


<h3>三方驗證（TPV）</h3>

<ol>
<li>準備傳給 Store 的資料</li>
<li><p>接受 Store 回傳的資料</p>

<ul>
<li>Store 驗證成功，回傳相關的交易資訊</li>
<li>Store 驗證失敗，回傳錯誤訊息</li>
<li>Store 回傳一個未知的錯誤格式</li>
<li>Store timeout</li>
</ul>
</li>
</ol>


<p>這個講者除了幽默之外也講的頗仔細，範例以 Rails 和 iOS 為例。這場也聽的吃力，一來因為我沒有寫 mobile app，二者則是我都避免去碰金流:P（寫應用最痛的就是這部份XD）。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[新竹] 清大旺宏館（圖書館）]]></title>
    <link href="http://tonytonyjan.net/2013/08/17/nthu-library/"/>
    <updated>2013-08-17T14:45:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/08/17/nthu-library</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/nthu-library.jpg"></p>

<p class='info info' data-title='簡介'>店名：清大旺宏館（圖書館）<br/>位置：新竹市光復路二段 101 號（走進清大正門口，右前方）<br/>網址：<a href="http://www.lib.nthu.edu.tw/">http://www.lib.nthu.edu.tw/</a><br/>開放時間：週一 - 週五 8:00 - 22:00，週六 - 週日 9:00 - 18:00<br/>SOHO 評價：★★☆☆☆</p>


<h2>簡介</h2>

<p><img class="right" src="http://tonytonyjan.net/images/nthu-library-2.jpg" width="400"></p>

<p>以往人說圖書館要去交大浩然，書局要去清大水木書坊。理由是浩然圖書館算是交大的一個特色地標，也是校內最有設計感的建築（淚），在被死板的宿舍與實驗大樓圍繞下顯的非常突兀，除此館內設備也非常齊全，水木書坊則是裝潢精美，且常常有二手書販售。</p>

<p>不過這句話直到清大的新圖書館於今年的四月啟用後，比浩然更大、更新、更華麗，筆者也不敢再說了。</p>

<h2>誰可以進去</h2>

<ol>
<li>清大生</li>
<li>交大生</li>
<li>換證人士</li>
</ol>


<p>雖然如此，彼此的權限卻不一樣。清大可以暢行無阻的使用館內的設施，等同換證進去的人，但交大學生證可以進去，卻無法借用討論室。所以如果依照權限排序的話，應該是「清大生 = 換證人士 > 交大生」，至於為何如此設計，筆者相信應該是技術上面臨問題，絕對不是交大生被排擠。所以交大生如果想要借用討論室，還是乖乖換證吧。</p>

<h2>科技感</h2>

<p><img class="left" src="http://tonytonyjan.net/images/nthu-library-3.jpg" width="300"></p>

<p>筆者發現裡面有很多自動化的設計，其中借書、還書機算比較常見的，比較吸引人的是借用討論室只要三個人使用學生證去刷機器，透過電腦查看可用的討論室，並且申請借用時段。</p>

<p>除此之外，在三樓視聽室可以看到很多賽亞人太空艙，在這裡找親朋好友開電影 party 絕對不是問題。如果是和女朋友，也可以選擇甜蜜雙人沙發一起共賞電影。</p>

<h2>發呆區</h2>

<p><img class="right" src="http://tonytonyjan.net/images/nthu-library-7.jpg" width="300"></p>

<p>其實有趣的設施頗多的，但令筆者較為印象深刻的就是這個「發呆區」。</p>

<p>這地方顧名思義就是讓你的發呆用的，你可以坐在一個「看起來」很舒服的椅子上（因為筆者實際坐過覺得普通），望著窗外無聲的人群來來往往，遠眺風景等等，可以放鬆心情、冥想、殺時間。</p>

<h2>SOHO 觀點</h2>

<p>宅宅會開玩笑說沒有網路會死，但對於 SOHO 族來說，他們命脈就在網路，沒有網路是真的會餓死的。你是想嘗試來這邊上網辦公的，很抱歉這裡<strong>非常不適合</strong>，因為筆者大學住在清大附近，去過約莫五十多次，十有六次網路是壞掉的。那段時間筆者每天的上班的路徑就是：住家 &ndash;> 清大旺洪 &ndash;>（如果網路不通）-> 交大浩然。但如果對網路需求沒有這麼高，也許是作家、畫家等，清大旺洪也算是不錯的選擇。</p>

<p>此外因為在圖書館內，所以不能飲食，在討論區以外的地方也不能放聲對談，自然也無法進行線上會議，頗不方便。但畢竟是圖書館，如果有這些需求，筆者仍建議轉移陣地為上策。</p>

<h2>其他照片</h2>

<p><img src="http://tonytonyjan.net/images/nthu-library-4.jpg"></p>

<p><img src="http://tonytonyjan.net/images/nthu-library-5.jpg"></p>

<p><img src="http://tonytonyjan.net/images/nthu-library-6.jpg"></p>

<p>照片來源： <a href="http://blog.xuite.net/popolee0317/kitty/67641461">http://blog.xuite.net/popolee0317/kitty/67641461</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[台北] 後門咖啡 Cafe Backstage]]></title>
    <link href="http://tonytonyjan.net/2013/08/12/cafe-backstage/"/>
    <updated>2013-08-12T13:31:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/08/12/cafe-backstage</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/cafe-backstage.jpg"></p>

<p class='info info' data-title='簡介'><img class="right" src="http://tonytonyjan.net/images/cafe-backstage-3.jpg" width="150"><br/>店名：後門咖啡（Cafe Backstage）<br/>位置：台北市大安區復興南路 2 段 332 號<br/>網址：<a href="https://www.facebook.com/CafeBackstage332">https://www.facebook.com/CafeBackstage332</a><br/>營業時間：週一 - 週日 8:00 - 22:30（月休二日，每月公告日期）<br/>SOHO 評價：★★★★☆</p>


<h2>簡介</h2>

<p><img class="left" src="http://tonytonyjan.net/images/cafe-backstage-2.jpg" width="300"></p>

<p>上個禮拜受到好友阿優的邀請，有幸來到此咖啡店聆聽一場演唱會，從此筆者就對此咖啡廳產生了興趣。</p>

<p>另外這家店其實只有一個門可以進去，可別被他的名字騙了。之所以被取名為「後門」，除了因為地理位置位於台大、國北教、科技大樓、中央百世大樓的後面以外，根據該店的介紹，表示有截取<a href="http://en.wikipedia.org/wiki/Erving_Goffman">高夫曼（Goffman）</a>的概念，希望可以為大家提供一處可以放鬆、保留隱私、不需要那麼注意形象的、悠閒的後台（backstage）。</p>

<h3>客群</h3>

<p>給筆者的第一印象就是「年輕」，除了因為後門咖啡約莫在 2013 年 5 月才開幕的，非常的年輕，又因為鄰近學校，在平日上班族需要上班的日子裡面，訪客很多是學生，除此也不時有教授光顧。</p>

<h3>不定期的展演</h3>

<p><img src="http://tonytonyjan.net/images/cafe-backstage-8.jpg"></p>

<p>另外值得一提的是，這家店幾乎每個禮拜都有展演，內容從講座、影片欣賞、樂團表演等等應有盡有。筆者雖不會定期追蹤到底有什麼活動，但由於每次拜訪都是從下午坐到晚上，時不時也會被他們的展演活動所驚喜，而之後的拜訪也會有點小期待晚上會發生什麼事情。筆者與此店的邂逅正是因為一次樂團表演。</p>

<p><img class="left" src="http://tonytonyjan.net/images/cafe-backstage-7.jpg" width="300"></p>

<h3>食物</h3>

<p>遺憾筆者只懂一點茶和酒，不敢亂評咖啡，不過有幾次他們在店內會研磨起咖啡豆，整間店裡面都是咖啡的香味，頗讚的。</p>

<p>咖啡先放一邊，在此跟各位讀者推薦花茶與原味貝果。</p>

<h2>價位</h2>

<p>最低消費一杯飲料，每杯約莫 100 &ndash; 150 元不等，價位中等。</p>

<h3>SOHO 觀點</h3>

<p>網路夠快，不太會延遲，不過這點不夠特色，值得關注的地方是他們的電源很多，光是門口一排 8 位子就有 6 個插座可以使用，而其餘只要是靠牆的座位也幾乎都不難找到插座，除此這裡氣氛佳，服務員也很親切，對於 SOHO 族來說，後門咖啡是不錯的地方。</p>

<h2>菜單</h2>

<p><img src="http://tonytonyjan.net/images/cafe-backstage-4.jpg">
<img src="http://tonytonyjan.net/images/cafe-backstage-5.jpg"></p>

<p>※ 照片來源：後門咖啡粉絲專頁</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[別把世界關在外面]]></title>
    <link href="http://tonytonyjan.net/2013/08/09/there-is-no-need-to-be-restricted/"/>
    <updated>2013-08-09T04:50:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/08/09/there-is-no-need-to-be-restricted</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/birds-heron-fly-sky-clouds.jpg"></p>

<p>最近發現有人非常討厭直銷，但就我看到的狀況，部份人實際上不是本身沒接觸過，就是以個案樣本當母體，例如看大家討厭直銷，所以跟著討厭，或者因為有接觸過直銷，但剛好接觸的是個爛人，所以從此對直銷抱有預設的敵意。我想同樣的例子可套用在對各行各業或某個族群的刻板印象，舉凡記者、娼妓、律師以及最近的軍人等等。</p>

<p>筆者認為在自己確認夠了解對方之前，其實沒有必要因為個案而放棄認識整個族群的機會，也許他們的職業你不讚同，但說不定對方是個有趣的人，卻因為自己預設的偏見，少了一個認識朋友的機會，這樣豈不是有點可惜？試問自己如何討厭一個自己不了解的人呢，既不了解何來討厭？反之人們似乎也常做出「因為不了解而喜歡」的事，既不了解又談何喜歡？</p>

<p>如果你會覺得因為討厭伊斯蘭教而拒絕拜訪好幾個國家，是一個不聰明的行為，那麼你大概也同意不該因為一個人的背景、職業、身份而設限自己的交友圈，沒有必要跟自己的人脈過不去。況且你也還不確定你真的了解伊斯蘭教嗎？</p>

<p>捫心自問吧，閣下跟我一樣是個資工系出生的工程師嗎？是的話你一定有工程界的朋友，除此如果還能認識不同領域的人，諸如藝術家、作家、警察、護士、消防員、道上兄弟、路邊攤老闆等等，這需要花費額外的時間和經歷，遠遠超過認識一個跟你同領域的人所需要的努力，但明明人脈已經受限了，你卻還可能因為討厭直銷、原住民、同性戀、某政黨或者某些族群，你的人際圈中將會完全沒有這些人，因為很重要，請容許我再說一次：真的完全沒有這些人。</p>

<p>那會發生什麼事呢？首先你的眼界明顯就是缺角的，從小到大一路上來，身邊的人都跟你差不多，想法、教育、專長、背景都差不多，連排他的對象也一樣，無法看到社會的全貌、無法從各種角度看待同一件事情、無法理解甚至是接受各行各業各族各國的人事物，甚至缺乏一些同理心、國際觀。心胸越小的結果就是帶來不快樂、偏見、贈恨、忌妒等，何苦呢？</p>

<p>為數眾多的人才能組成一個社會，而真正能為你拼湊出整個社會全貌的，是你多元交友圈。幸運的我們難得生在台灣這樣自由的社會，有各種職業、宗教、社團，不妨有生之年、或多或少都是去參與一下，能多嘗試就嘗試，結交各種圈子的朋友。</p>

<p>相信我，如果你現在有這些「誰可以見」、「要避開誰」、「我討厭誰」、「誰厭惡我」種種的想法，等吃到六七十歲的時候大概就會覺得根本是多餘的、徒增煩惱而已。</p>

<p>不妨現就在幫自己省下六十年，心胸開闊一點，少一點偏見，多一些對這個世界的體驗和好奇，如此豁達的活著，豈不瀟灑？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Tuesday Taiwan #25]]></title>
    <link href="http://tonytonyjan.net/2013/07/30/ruby-tuesday-taiwan-number-25/"/>
    <updated>2013-07-30T20:07:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/07/30/ruby-tuesday-taiwan-number-25</id>
    <content type="html"><![CDATA[<h2>Topic 1</h2>

<p class='info info' data-title='Carol Hsu：最速部署 Rails 3 在 IIS6 (及以上)'>第一次部署 Rails on IIS 就上手！介紹如何在 Windows 環境內，用 IIS 與 reversy proxy 的架構搭建起 production-level 的 Rails 運行環境。</p>


<p>在 <strong>Windows Server 2003</strong>、<strong>IIS 6</strong> 、<strong>9 年以上的機器</strong>環境上佈署 Rails application！</p>

<p>光聽到這樣的環境就腿軟了，太猛了XDDD，解法大綱是利用反向代理的方式，將 IIS 收到的 request 送給 Rails server。</p>

<p>至於為什麼要執著在 windows，原來是講者負責政府機關網站的維護，並且在講題當中稍微抱怨政府單位的機器老舊又脫離不了 windows。至此我實在非常有同感，最近手邊就有一個學校的案子，結果網站竟然要支援到 IE7，還要有 responsive design，實在血尿啊！</p>

<p><del>另外今天講者有綁馬尾，心情不錯www</del></p>

<h2>Topic 2</h2>

<p class='info info' data-title='Tka：Ruby 與推薦系統'>介紹推薦系統的原理以及如何使用 Ruby 或 JRuby+Mahout 來搭建簡易的推薦系統。</p>


<h3>推薦系統的分類</h3>

<ol>
<li>Content Based：以消費者個人的資料作為推理基礎</li>
<li>Collaborative Filtering

<ol>
<li>Item Based：找出類似的商品</li>
<li>User Based：這個商品被誰買過，同時這人有買了其他哪些商品</li>
</ol>
</li>
</ol>


<h3>Libraries</h3>

<ol>
<li><a href="https://github.com/paulasmuth/recommendify">Recommendify</a></li>
<li><a href="http://mahout.apache.org/">Mahout</a></li>
</ol>


<p>想到推薦系統也許可用在交友網站上面，例如選了對象 A 的人，同時也選了對象 B。搭配 linkedin 的親友驗證機制，過濾掉自我感覺良好的人，這東西拿來搞個專案似乎很多演算法都可以玩到啊XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自由業之路]]></title>
    <link href="http://tonytonyjan.net/2013/07/07/soho-life-the-first-year/"/>
    <updated>2013-07-07T02:34:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/07/07/soho-life-the-first-year</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/freedom.jpg"></p>

<h2>自由人生</h2>

<p>在大家都乖乖去上班並且抱怨薪水低的時候，我已經決定要跟大家走不同的路，也朝著自己未來想過的生活努力著：可以時常陪伴家人、朋友、未來的另一半，並且能夠陪伴自己未來的孩子成長。要達到這樣的目標，要嘛創業，不然就成為一個自由業者，而我選擇了後者。</p>

<p>幸運的是對目前為止的生活算是頗滿意，工作與生活合而為一，時間彈性能夠自己規劃，圖書館和咖啡廳就是我的辦公室，想要旅遊可以挑平日，不用在假日與大家人擠人，更重要的是不時也可以回家陪伴家人（在寫這篇文章的同時，我也正在家裡）。</p>

<p>能夠擁有這麼棒的工作，我覺得我已經是全世界最幸福的人了。</p>

<h2>Ruby 救我命</h2>

<p>回首過去大三開始接案子的時候，主要是用 Java，而後來大四以後才轉用 Ruby 吃飯。為什麼呢？老實說實下 IT 界可以個人接的案子除了 mobile app 之外，最多的就屬 web app 了，確實 Java 可以寫 Android 程式，市場也大，但對於沒有智慧型手機使用經驗的我來說，手機應用對我來說實在非常陌生；反觀 web 我就熟悉許多，雖然 Java 也能寫 Web，但論及速度不及 Ruby on Rails（也有可能是我 Java 太弱了），所以為了快速吃飯，趕緊見風轉舵跟潮流跳槽到 Ruby on Rails。從此不但生活費有了，學費有著落，房租也不用擔心，還可以支撐家計。所以 Ruby on Rails 可說是我的救命恩人，當初選擇從 Java 跳到 Ruby 吃飯果然是正確的。</p>

<h2>最近的不安</h2>

<h3>當兵</h3>

<p>當然就是當兵了，寧可砍掉腳趾頭也不想當兵，因為只要一當兵就會失去可觀的收入，加上因為還有一個弟弟，所以我也不能申請免役，總之制度就是如此，我也不想抱怨什麼，目前對家裡最大利益的行動就是不斷緩徵。</p>

<h3>教授</h3>

<p>我有幸錄取的台科大，希望可以裡面跟到好教授並且跟他學習研究方法，但怕萬一教授不太友善，而且還只是想要衝論文評鑑與點數的普通教授，那我不難猜到他們會提要求，要我減少工作量以花多一點時間在他們的研究上（其實我也有我想要做的研究），而我剛好又不是普通學生，那大概就會和不來，屆時我只好給他擺爛了。如果是好教授，我可以跟著他學習；反之只要可以讓我緩徵的教授勉強來說也是不錯。</p>

<p>反正研究所最多六年，萬一屆時我已經無法可躲兵役，這段時間應該也夠我的弟弟成氣候，等到那時他也有能力可以幫忙持家，我進去國軍裡面也能多放幾顆心。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[跟簡報說話]]></title>
    <link href="http://tonytonyjan.net/2013/07/03/talk-to-your-slides/"/>
    <updated>2013-07-03T14:12:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/07/03/talk-to-your-slides</id>
    <content type="html"><![CDATA[<h2>起源</h2>

<p>昨晚參加了 Ruby Tuesday #24，地點在<a href="http://www.oldtree.com.tw/">老樹咖啡</a> B1 休閒區，聽著講者不斷講著「下一頁」，然後協助換頁的人就會按一下鍵盤。身為一個程式設計師，我突然有個想把這個步驟交給電腦做的衝動，於是開始試著找一些 library 來完成。</p>

<h2>找可用軟體（放棄）</h2>

<p>起初不想自幹，因為語音控制設備的軟體感覺頗容易想到的，在 google 之下找到兩個 <a href="https://wiki.gnome.org/GnomeVoiceControl">gnome-voice-controle</a> 和 <a href="http://www.simon-listens.org/">Simon</a>，只是前者不但安裝麻煩且已經不再開發，後者則是 KDE 專用。只好另闢新逕。</p>

<h2>自幹軟體（放棄）</h2>

<p>心想用 Qt 寫成 system tray 之類的，然後可以送 keyboard event，例如 page up、page down 等，如此無論簡報是網頁、ptt 或 pdf，全部都可以用。至於語音辨識的部份則是用李開復的開源項目 <a href="http://cmusphinx.sourceforge.net/">Sphinx</a>，但後來放棄的原因是此途徑更加「厚工」（但只要是可以完成，功力能夠大增應該是確定的）。由於筆者是個懶人，所以只好再找其他方法。</p>

<h2>Web Speech Recognition API</h2>

<p>沒辦法了，那就退一步使用 <a href="https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html">Web Speech API</a>，優點是簡單易用，開發快速，缺點就是必須限制在瀏覽器，且目前只有所有瀏覽器中，只有 Chrome 25 以上有支援，對於我的願景相比之下，這簡直是致命傷。</p>

<h2>動手做</h2>

<p>所以我就不管了，反正只是做個玩具，堪用就好。第一個玩具就用 <a href="https://github.com/hakimel/reveal.js/">Reveal.js</a> 來實驗效果：</p>

<p><a href="http://tonytonyjan.net/demo/speech/">點我觀看</a></p>

<h2>後記</h2>

<p>我的 plugin 會在 console 留下 log，下午賊魚來我家，就在電腦前面一邊聊天，不過麥克風並沒有關，等我們話題結束之後，結果長這樣：</p>

<pre><code>沒能從前明月光
michael
崇仁崇賢珉宇美人重建院有些事兒感染飛行車委員
神學士
電子時報中原風邪惡美人重建院遊學社子文學友 1 樓
門號至正腔圓融合購網電子時鐘原數學人
個人申請
行船人
各類型 es 任
20 集 google
自由欄人開放任用
下一頁
兒子對了
42 43 20 歲 hello 49 死神 h 仁慈醫院內科 face 血壓高到底怎麼用成人網
血壓高
next page
下載 facebook 40 hc 仁和路 169 號為了 13 17 樓仁慈醫院
sf 人的危險
沒有
個人年
死神 h 死神科嘻哈高手禮劉大哥大溪鞋遊戲只有一個月了十萬元有人會所地球人在
什麼時候高雄人兒子吃人你明天是 11 月圓 google h
高雄
奇摩 google 人的鞋子
時間分解了
手
很壞的時候看看好了
人才是有什麼看看好了
熱學的大姊姊姊
</code></pre>

<p>什麼「熱學的大姊姊」，chrome 真是神空耳啊XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[System V 與 Upstart]]></title>
    <link href="http://tonytonyjan.net/2013/06/26/system-v-and-upstart/"/>
    <updated>2013-06-26T10:53:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/06/26/system-v-and-upstart</id>
    <content type="html"><![CDATA[<p>最近剛好將某個過去架設的 Heroku-like server，用 <a href="http://upstart.ubuntu.com">Upstart</a> 將傳統的 <a href="https://en.wikipedia.org/wiki/UNIX_System_V">System V</a> 替換掉，在此做個筆記，這篇文章不會教你怎麼寫啟動腳本，就只是個簡介。</p>

<p>Upstart 早在 Ubuntu 6.10 的時候首次出現，以取代傳統的 sysvinit。結果因為好評不斷，Fedora 9、Debian、Google Chrome OS 也相繼使用。其中一個最大的原因在啟動程序時採用了異步啟動（asynchronously）的方式。即便如此，鑑於不是所有的程式都有 upstart 的格式，最新的 Ubuntu 版本仍然保留了傳統的 sysvinit 啟動方式。</p>

<h2>System V</h2>

<p>若遵循古法，當希望某程式能在 Linux 啟動的時候執行，會放個腳本在 <code>/etc/init.d</code>，（通常能在 <code>/etc/init.d/skeleton</code> 找到範例），同時用 <code>update-rc.d</code>（在 RedHat 家族是  <code>chkconfig</code>）決定是否啟用該服務。這個指令會根據 <code>/etc/init.d/</code> 產生一堆軟連結（symbolic links）在 <code>/etc/rc#.d/</code>。內容物大概長的像 <code>K##foo</code> 或 <code>S##bar</code>，用以決定 kill 或 start 的順序。</p>

<p>但是系統要啟動的時候，由於程序是乖乖的依序一個個執行（即便沒有相依關係），這將大大降低啟動的速度。為了改善這個問題，Upstart 誕生了。</p>

<h2>Upstart</h2>

<p>Upstart 是一個事件驅動的啟動工具，根據 job definition files（<code>/etc/init/*.conf</code>），定義哪些服務應該在何時、何種情境下被執行，有別於 System V 的依序啟動，Upstart 的程序是異步執行的，好處是可以有效的利用系統資源，讓系統更快速的啟動（例如網路正在初始化的時候可以同時啟動一些硬碟或處理器相關的服務）。此外比起 System V 格式的腳本，<code>*.conf</code> 的腳本更易於閱讀使用。</p>

<h2>停用/啟用</h2>

<p class='info warning' data-title='注意'>一般而言，除非你清楚某 service 是幹嘛的，否則應該養成別亂停用服務的習慣。</p>


<p>如果我們今天想停用/啟用某個服務，但不知道他是否支援 upstart，可以先到 <code>/etc/init</code> 看看他是否有設定檔，或執行以下指令測試：</p>

<pre><code>$ sudo status mysql
mysql start/running, process 12461
</code></pre>

<!---->


<pre><code>$ sudo status postgresql
status: Unknown job: postgresql
</code></pre>

<p>以此為例，如果你想停用 mysql，可以直接在 <code>/etc/init/mysql.conf</code> 裡面，將檔頭附近某個以 <code>start on</code> 開頭的那行給註解掉，或是使用 <code>manual</code> 指令：</p>

<pre><code># sudo
$ echo 'manual' | sudo tee /etc/init/mysql.override # 當你不希望動到原設定，那就放個 `*.override`。
</code></pre>

<p>或是：</p>

<pre><code># root
$ echo manual &gt;&gt; /etc/init/smbd.conf
</code></pre>

<p class='info info' data-title='備註'>更詳細的使用方法請閱讀 <code>man 5 init</code>，裡面有包括 <code>*.override</code> 的使用案例。</p>


<p>至於 <code>/etc/init/postgresql.conf</code> 不存在，要馬自己寫，否則仍可用傳統的方式停用：</p>

<pre><code>sudo update-rc.d apache2 disable
sudo service apache2 stop
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[記憶翻排遊戲 - 克隆牆]]></title>
    <link href="http://tonytonyjan.net/2013/06/22/the-human-cloning-wall/"/>
    <updated>2013-06-22T07:29:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/06/22/the-human-cloning-wall</id>
    <content type="html"><![CDATA[<p>好一陣子沒更新了，來個濫竽充數好了。是說前鎮子（應該算好久一陣子了XD） 2013 的韓國小姐引起一陣複製人的話題，拿來揶揄的、<a href="http://jbhuang0604.blogspot.tw/2013/04/miss-korea-2013-contestants-face.html">做研究的</a>、人臉辨識的，什麼都有，而我當時也一時興起拿以前的玩具做了一個<a href="http://human-cloning-wall.herokuapp.com/">記憶翻排遊戲</a>。</p>

<p>除了遊戲本身之外，還有積分排名的功能，enjoy。</p>

<p><img src="http://tonytonyjan.net/images/human-cloning.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Tuesday Taiwan #22 初體驗]]></title>
    <link href="http://tonytonyjan.net/2013/04/22/first-time-to-attend-ruby-tuesday/"/>
    <updated>2013-04-22T21:45:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/04/22/first-time-to-attend-ruby-tuesday</id>
    <content type="html"><![CDATA[<p>這是我第一次參加 Ruby Tuesday，雖然在幾年前就知道這場聚會，但因為地點總是在台北，又都辦在晚上，即便心裡頭想去，也因麻煩如此而作罷。</p>

<p>結果作夢也想不到，第一次參加，竟然是以講者的身份，而且台下有一堆我的偶像，怕是還沒開口就先腿軟了。</p>

<iframe src="https://docs.google.com/presentation/d/13y-6Axgmu339C4lhOHNvcEtrR7xhgCJ6I-Ro5zR5nss/embed?start=false&loop=false&delayms=3000" frameborder="0" width="480" height="389" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>


<p><img src="http://tonytonyjan.net/images/ruby-tuesday-tw.jpg"></p>

<p><img src="http://tonytonyjan.net/images/ruby-tuesday-tw2.jpg"></p>

<p><img src="http://tonytonyjan.net/images/ruby-tuesday-tw3.jpg"></p>

<p>這天看到好多偶像，又可跟見龍前輩會話，真的很開心，特別感謝當天慕凡前輩邀請我來這場盛宴。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Potluck]]></title>
    <link href="http://tonytonyjan.net/2013/04/01/potluck/"/>
    <updated>2013-04-01T12:18:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/04/01/potluck</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/potluck/19.jpg"></p>

<p>↑開飯前大合影。</p>

<p><img src="http://tonytonyjan.net/images/potluck/16.jpg"></p>

<p>↑豐盛的菜餚。</p>

<p><a href="http://tonytonyjan.net/images/potluck/">所有照片</a></p>

<hr />

<p>這場 Potluck 的誕生，可以追溯到二月的時候與 CSSula 成員們一起去看「決殺令」，散會後我與煥博、翔先生於樹太老續攤，順口提到，交給煥博當主辦，故有此盛宴。</p>

<p>簡白的說，<a href="http://en.wikipedia.org/wiki/Potluck">Potluck</a> 就是一群人聚餐時，每個人親自準備一道菜的聚會。記得幾年前我也要在嘉義辦一樣的活動（那時並不知道這叫「Potluck」，中文似乎也沒有對應的詞彙），但大多朋友都忙於工作，最後決定是訂一家餐廳聚會，頗是可惜。所以這次有幸可以參加這樣有趣的活動，可以說非常的高興。</p>

<p>老實說我不太會下廚呢（但我很會洗碗），在家裡可以吃到媽媽、外婆做的美味家常菜，對於自己親自下廚的吸引力就減了大半。所以我挑了一個簡單的「雞肉蕃茄咖哩」，基本上簡單到可以用膝蓋煮，只要材料比例正確，膝蓋沒有壞掉，且至少不要煮成咖哩「湯」就行了。（曾考慮泡麵，但事後覺得這樣太沒誠意了XD）</p>

<!-- more -->


<p><img src="http://tonytonyjan.net/images/potluck/1.jpg" width="400"></p>

<p>↑第一個步驟：正在削馬鈴薯的我。</p>

<p><img src="http://tonytonyjan.net/images/potluck/28.jpg" width="400"></p>

<p>↑最後一個步驟：咖哩與我。</p>

<p><img src="http://tonytonyjan.net/images/potluck/26.jpg" width="400"></p>

<p>↑Kevin 的招牌沾醬蛋。</p>

<p><img src="http://tonytonyjan.net/images/potluck/27.jpg" width="400"></p>

<p>↑煥博與他的白醬義大利麵。（誇一下，這一道料理這超香的！）</p>

<p><img src="http://tonytonyjan.net/images/potluck/30.jpg" width="400"></p>

<p>↑翔先生與他的烤棒棒腿。</p>

<p><img src="http://tonytonyjan.net/images/potluck/20.jpg" width="400"></p>

<p>↑AC 的蛋包飯。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[台科面試遊記]]></title>
    <link href="http://tonytonyjan.net/2013/03/22/the-interview-in-ntust/"/>
    <updated>2013-03-22T13:34:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/03/22/the-interview-in-ntust</id>
    <content type="html"><![CDATA[<h2>來龍去脈</h2>

<p>有人搞不清楚我現在到底在幹嘛（畢業沒？等當兵？正在唸研究所？），乾脆藉這次機會解釋整個故事。</p>

<p>大四下的時候本來就要畢業去當兵了，並不打算攻讀研究所，但因為參加某個微軟的比賽認識了一位教授朋友，在他推薦台科的陳俊良教授之下，加上可以為我引薦，我被說動，理由是這位教授的專業是我有興趣的軟工和網路，所以大四下決定去考研究所。<strong>但因為我的跨下有一根屌</strong>，如果不小心畢業了，在我來得及等到申請入學之前，就會先輩抓去國軍 online。好險我當初留了一門自然向度的通識課，就是用在這種時候。最後順利的請老師把我當掉，也順利的進入大五。</p>

<p>所以正解是：我現在已經畢業了，且有一份在大五期間找到（應該算被找到）的一份工研院全職工作。</p>

<p>但這位教授沒有告訴我推甄的推薦函要他寫，我遂找了導師寫，想當然爾是沒有上，因為我的成績在系上 60% ~ 70% 左右，一下就會被助理小姐過濾掉（我會認為大學修課就是知道這在幹嘛、用在哪裡、學到什麼就好，分數有及格就行，剩下的寶貴時間應該要去學其他有用但學校未必會教的東西，或是尋找自己真正想投入的領域，要研究那是研究所的事情，所以只看我的成績的話，我是個廢物沒錯）。</p>

<h2>CWT</h2>

<p>來個和面試無關的話題，面試當天其實頗愜意的，我還和好友去逛 CWT，那時在 K 島上看到忽田各的法國麵包超人就已經很想收藏了。結果在看到攤位有擺的同時，忍不住就拜了一本。</p>

<p><img src="http://tonytonyjan.net/images/bread-man.jpg" width="300"></p>

<p>在進入考場前本來要提著這個袋子進去，但是被好友阻止XD</p>

<p><img src="http://tonytonyjan.net/images/before-interview.jpg" width="300"></p>

<h2>面試</h2>

<p>這輩子從來沒有面試過，對於要準備什麼也不是很清楚，唯一的機會是當年學測推中山，結果連面試的機會都沒給我，就在筆試被刷下來了，既然中山不要我，沒辦法只好去交大了（最近吳寶春好像也發生類似事件XD）。</p>

<p>我決定裸試，可是卻在前一天晚上靈機一動心想難得有機會表演，還是用自己的風格準備一個簡報好了：</p>

<p>簡報不會自動縮放，建議點<a href="http://tjslides.herokuapp.com/slides/34/present">播放網址</a>，按下 F11 變全螢幕觀看。</p>

<iframe src="http://tjslides.herokuapp.com/slides/34/present" height=512 width=768></iframe>


<p>結果誰知道當天電腦的瀏覽器是 IE 6，而我的簡報用了 HTML5，所以自然是播放不起來，失算啦XD，只好用口頭報告（其實本來就是打算要口頭報告）。</p>

<p>結果最想放的這一頁竟然沒有放出來：</p>

<p><img src="http://tonytonyjan.net/images/interview-slide.png"></p>

<p>（你看我真的不是來找碴的，我是抱著一顆熱騰騰的學習心來的）</p>

<h3>為什麼不好好修過</h3>

<blockquote><p>教授：「你那通識什麼成績，怎麼不好好修過呢？」<br/>
看來教授要開始洗我臉了。
我：「不，我必須被當掉。」<br/>
教授們：「！！！」
教授：「為什麼要被當掉？」<br/>
我：「因為過了就會畢業，我不能畢業，不然就要當兵無法參加面試，所以我求老師把我當掉。」</p></blockquote>

<p>教授們大概傻眼，我則講著我的故事，我猜他們一天面試三十幾個學生已經很累，又突然看到<strong>問題學生</strong>想必一定覺得很莫名其妙吧。</p>

<h3>交大軟工很弱</h3>

<p>我忘記是哪個問題讓我脫口而出，似乎是問我為什麼想來這間學校唸，我的本意是交大的軟工教育沒有符合我的期待，而我的教授朋友推薦台科陳老師，他又有軟工與計算機網路的背景，就希望能跟隨，誰知道誠實的一句話：「交大軟工很弱。」會被從頭質問到尾。我不禁納悶為什麼我講了這麼多，面試官只有聽到這句話？</p>

<p>況且交大軟工真的不是重點教育，雖然有王教授開的軟工課，但只要有修過且認真上課的同學都知道是雷，我這一屆的同班的甚至還自己發起軟工自修（自救）讀書會，相信這門課到底有幾伏特並不用我費唇舌解釋，真要說這學期軟工學到的東西，我不認為會比我在大一大二自學的多（看來我年輕時時間都<strong>浪費</strong>在這了）。</p>

<p>結論是我不是惡意批判交大，而是沒有仔細修飾自己講的話，加上我不太會說謊。</p>

<p>參考：<a href="https://www.facebook.com/714547619/posts/10151281716832620">我在 FB 開的討論</a></p>

<h3>專題</h3>

<blockquote><p>教授：「所有同學都有準備自己的專題成果，為什麼你沒有，是認為不重要嗎？」<br/>
我：「因為我認為我專題以外的成就遠超過我的專題成就。」</p></blockquote>

<p>既然提到專題就小聊一下：我的專題是蔡神指導的，他的一句話影響我很深：「大學專題就是玩，研究等去研究所再說！」，所以我就選了社群網站的應用（用 facade pattern 把各大社群網站的 API 包起來），當時還用這個做了一個「梅竹機器人」，感染五千多個清大生的噗浪帳號（後來被黑名單XD）。另外專題的副產物 <a href="https://code.google.com/p/tjplurker/">tjplurker</a> 放在 rubygems 上面也有 5000 下載次，就算沒有很多，也該有一點點點用吧？也許比起其他同學的專題來的有趣，但是沒有這麼的「學術」，所以我很清楚教授不喜歡這種東西，也實在不好意思拿來說嘴。</p>

<p>而我的專題是少數自訂題目的，所以要論在學期間的專題、學術上的成就，大概比不上其他同學（我這組連學長姊指導都沒有，更別說實驗室，全部自己 DIY）。且專題比我優秀的人路上都是，那我就不需要自曝其短。此外我也會懷疑<strong>自訂題目</strong>的專題，教授真的想聽？</p>

<h2>結語</h2>

<p>就這樣，我的第一次獻給了台科，且意外給老師留下深刻的印象。現在回想起來，我如果是那個教授，一定恨不得把這王八蛋學生掐死吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[凱薩密碼中文版]]></title>
    <link href="http://tonytonyjan.net/2013/03/20/tj-caesar-cipher/"/>
    <updated>2013-03-20T16:33:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/03/20/tj-caesar-cipher</id>
    <content type="html"><![CDATA[<p>靈感是受到凱薩密碼的影響，且英文論壇中為了避免髒話或敏感詞彙被擋，有 rot13 的出現（其實就是凱薩加密，key 設定成 13，所以 rot13 兩次會等於原來的句子）。想說中文也可這樣玩，所以決定寫一個全世界最沒用的玩具。</p>

<h2>安裝</h2>

<pre><code>gem install tj_caesar_cipher
</code></pre>

<h2>使用</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;tj_caesar_cipher&#39;</span>
</span><span class='line'><span class="n">s1</span> <span class="o">=</span> <span class="no">TJCaesarCipher</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;tonytonyjan&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;tonytonyjan&quot; </span>
</span><span class='line'><span class="n">s1</span><span class="o">.</span><span class="n">rot_en!</span> <span class="c1"># 預設就是 rot13</span>
</span><span class='line'><span class="c1"># =&gt; &quot;gbalgbalwna&quot; </span>
</span><span class='line'><span class="n">s1</span><span class="o">.</span><span class="n">rot_en!</span> <span class="c1"># 再執行一次就會恢復原狀</span>
</span><span class='line'><span class="c1"># =&gt; &quot;tonytonyjan&quot; </span>
</span><span class='line'><span class="n">s1</span><span class="o">.</span><span class="n">rot_en</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span> <span class="c1"># 也可以給不同的 key</span>
</span><span class='line'><span class="c1"># =&gt; &quot;gbalgbalwna&quot; </span>
</span><span class='line'>
</span><span class='line'><span class="n">s2</span> <span class="o">=</span> <span class="no">TJCaesarCipher</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;我是厲鬼，不是大神&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;我是厲鬼，不是大神&quot; </span>
</span><span class='line'><span class="n">s2</span><span class="o">.</span><span class="n">rot_cjk!</span>
</span><span class='line'><span class="c1"># =&gt; &quot;諸輖粙牕，直輖舎偷&quot; </span>
</span><span class='line'><span class="n">s2</span><span class="o">.</span><span class="n">rot_cjk!</span>
</span><span class='line'><span class="c1"># =&gt; &quot;我是厲鬼，不是大神&quot; </span>
</span><span class='line'><span class="n">s2</span><span class="o">.</span><span class="n">rot_cjk</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;戒昰厳鬽，与昰夨祟&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果你好奇中文版的 rot13 到底怎麼作到的……</p>

<pre><code>...
def rot_cjk! key = nil
  [
    (0x3040..0x309F),   # Hiragana
    (0x30A0..0x30FF),   # Katakana
    (0x3400..0x4DB5),   # CJKUI Ext A block
    (0x4E00..0x9FCC),   # CJK Unified Ideographs block
    (0x20000..0x2A6D6), # CJKUI Ext B block
    (0x2A700..0x2B734), # CJKUI Ext C block.
    (0x2B740..0x2B81D)  # CJKUI Ext D block.
  ].each{|range|
    range = (range.min..range.max+1) if range.count.odd?
    self.rot_unicode!(key || range.count/2, range)
  }
  self
end
...
</code></pre>

<p>以上XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[笑典 - 教育部國語辭典 Chrome 離線版]]></title>
    <link href="http://tonytonyjan.net/2013/02/19/hahadict/"/>
    <updated>2013-02-19T14:47:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/02/19/hahadict</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/hahadict2.png"></p>

<p><a href="https://chrome.google.com/webstore/detail/%E7%AC%91%E5%85%B8/ppgggcmomnpmeikbpaelmefpjfnmaidk">下載</a></p>

<iframe width="853" height="480" src="http://www.youtube.com/embed/oetCzmsT6IY" frameborder="0" allowfullscreen></iframe>


<p>響應 <a href="http://www.facebook.com/photo.php?fbid=500331380008153&amp;set=a.456791061028852.107377.454607821247176&amp;type=1">3du.tw 黑客松</a>時做的玩具。</p>

<h2>使用</h2>

<ol>
<li>在一般網頁 反白字串 + 右鍵</li>
<li>Ctrl + 拖曳反白</li>
</ol>


<h2>資料來源</h2>

<p>教育部重編國語辭典修訂本</p>

<h2>特別感謝</h2>

<ol>
<li>教育部國語推行委員會團隊</li>
<li>Audrey Tang、TonyQ Wang、kcwu、及其他 3du.tw 的熱血黑客</li>
</ol>


<h2>貢獻</h2>

<p><a href="https://github.com/tonytonyjan/hahadict">https://github.com/tonytonyjan/hahadict</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 2.0 重點介紹]]></title>
    <link href="http://tonytonyjan.net/2013/02/18/lets-preview-ruby-2-dot-0/"/>
    <updated>2013-02-18T22:46:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/02/18/lets-preview-ruby-2-dot-0</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://tonytonyjan.net/images/ruby.jpg" width="300"></p>

<p>終於也等到了 <a href="http://www.ruby-lang.org/en/news/2013/02/08/ruby-2-0-0-rc2-is-released/">Ruby 2.0 RC 釋出的消息</a>，看來正式版本也不遠了。而 Ruby 2.0 是什麼？又到底都參了啥好處？這裡整理一些我的筆記。</p>

<p><strong>首先 Ruby 2.0 完全向下兼容</strong>，這是個好消息，意味之著你不用更改你的程式碼便可以從任何版本無痛升級 2.0（python 迷表示羨慕？），不用擔心你的 Ruby 專案（例如 Rails 等）升級後跑不動。故 Ruby 2.0 可看做是 Ruby 1.9 再加點料，而這些料可炫，且聽我道來。</p>

<h2>Refinements</h2>

<h3>Module#refine</h3>

<p>你過去擴展一個 class 可能會這樣做：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;tonytonyjan&quot;</span><span class="o">.</span><span class="n">double</span>
</span><span class='line'><span class="c1"># =&gt; NoMethodError: undefined method `double&#39; for &quot;tonytonyjan&quot;:String</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">String</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">double</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">*</span><span class="mi">2</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;tonytonyjan&quot;</span><span class="o">.</span><span class="n">double</span> <span class="c1"># =&gt; &quot;tonytonyjantonytonyjan&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ruby 在團隊開發時，其中一項令人頭痛的問題是，當我們擴展某些 class 時，由於影響的是全局，萬一 method 撞名則會難以 debug。而現在 refinements 則可以將 class 擴展包在 namespace 裡面：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="n">refine</span> <span class="nb">String</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">double</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">*</span><span class="mi">2</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="s2">&quot;tonytonyjan&quot;</span><span class="o">.</span><span class="n">double</span> <span class="c1"># =&gt; &quot;tonytonyjantonytonyjan&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;tonytonyjan&quot;</span><span class="o">.</span><span class="n">double</span>
</span><span class='line'><span class="c1"># =&gt; NoMethodError: undefined method `double&#39; for &quot;tonytonyjan&quot;:String</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Kernel#using</h3>

<p>寫好的擴展也可以拿出來給別人用：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Bar</span>
</span><span class='line'>  <span class="n">using</span> <span class="no">Foo</span>
</span><span class='line'>  <span class="s2">&quot;test&quot;</span><span class="o">.</span><span class="n">double</span> <span class="c1"># =&gt; &quot;testtest&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># in proc/lambda</span>
</span><span class='line'><span class="o">-&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">using</span> <span class="no">Foo</span>
</span><span class='line'>  <span class="s2">&quot;test&quot;</span><span class="o">.</span><span class="n">double</span> <span class="c1"># =&gt; &quot;testtest&quot;</span>
</span><span class='line'><span class="p">}</span><span class="o">.</span><span class="n">call</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Keyword Arguments</h2>

<p>寫過 python 大概對這不陌生，Ruby 2.0 也引進了一樣的功能，過去我們可能會在 method 參數中餵一個 Hash 當作 option 使用，通常會長這樣：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">foo</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>  <span class="n">options</span> <span class="o">=</span> <span class="p">{</span><span class="ss">a</span><span class="p">:</span> <span class="s2">&quot;A&quot;</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="s2">&quot;B&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">merge</span> <span class="n">options</span> <span class="c1"># given default value</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">options</span><span class="o">[</span><span class="ss">:a</span><span class="o">]</span><span class="p">,</span> <span class="n">options</span><span class="o">[</span><span class="ss">:b</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但在 Ruby 2.0，可以簡化如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">foo</span> <span class="ss">a</span><span class="p">:</span> <span class="s2">&quot;A&quot;</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="s2">&quot;B&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果想拿到所有的 keys，就放兩顆星星：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="o">**</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">options</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">foo</span><span class="p">(</span><span class="ss">a</span><span class="p">:</span> <span class="s2">&quot;A&quot;</span><span class="p">,</span> <span class="ss">b</span><span class="p">:</span> <span class="s2">&quot;B&quot;</span><span class="p">)</span> <span class="c1"># =&gt; {:a=&gt;&quot;A&quot;, :b=&gt;&quot;B&quot;}</span>
</span><span class='line'><span class="n">foo</span><span class="p">(</span><span class="ss">:a</span><span class="o">=&gt;</span><span class="s2">&quot;A&quot;</span><span class="p">,</span> <span class="ss">:b</span><span class="o">=&gt;</span><span class="s2">&quot;B&quot;</span><span class="p">)</span> <span class="c1"># =&gt; {:a=&gt;&quot;A&quot;, :b=&gt;&quot;B&quot;}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Enumerator#lazy</h2>

<p>以往我們可能要設個 timeout 或 counter 去列舉無窮 enumerator，但 <code>Enumerator::Lazy</code> 讓迭代過程這變的更為簡單：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="ss">Float</span><span class="p">:</span><span class="ss">:INFINATY</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:even?</span><span class="p">)</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>      <span class="c1"># 這會跑到海枯石爛</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="ss">Float</span><span class="p">:</span><span class="ss">:INFINATY</span><span class="p">)</span><span class="o">.</span><span class="n">lazy</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:even?</span><span class="p">)</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="c1"># 迭代每回合都會執行 `#event?`，而非數完所有元素</span>
</span></code></pre></td></tr></table></div></figure>


<p>但不要看到新功能就高潮了，然後套用在每個地方，這方法通常不會比較有效率，除非真的有需要，否則少用為妙。</p>

<p>有興趣可以看看<a href="http://shugomaeda.blogspot.tw/2012/03/enumerablelazy-and-its-benefits.html">大師是怎麼用的</a>。</p>

<h2>Module#prepend</h2>

<p>談到擴展 class，新增 method 很容易，若想 override method 又想保留 origin 的功能卻很麻煩。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;A#foo&quot;</span>
</span><span class='line'>    <span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>這時我們想要幫他的 <code>#foo</code> 加點料，又不想動到原來的程式（monkey patch），多會這麼做：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">B</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;B#foo&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="kp">include</span> <span class="n">B</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># A#foo</span>
</span><span class='line'><span class="c1"># B#foo</span>
</span></code></pre></td></tr></table></div></figure>


<p>這是利用 <code>A#foo</code> 裡頭的 <code>super</code> 來完成，但寫 <code>super</code> 不應該是被擴展的方的責任，可以話，我們希望把 super 給拿掉。因此 Rails 曾在 <code>active_support</code> 下擴展 <code>Module#alias_method_chian</code>，但因為被<a href="https://rails.lighthouseapp.com/projects/8994/tickets/285-alias_method_chain-limits-extensibility#ticket-285-20">報出問題</a>不被建議使用，Rails 3 之後建議利用 Ruby 本身的 <code>module</code> 和 <code>super</code> 特性解決問題：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Base</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Base&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Ext</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Ext&quot;</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Ext</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; Ext</span>
</span><span class='line'><span class="c1"># Base</span>
</span></code></pre></td></tr></table></div></figure>


<p>理論上一個 module 透過 inclusion 不可能 override class method，因為 module inclusion 的運作是對 class 做 subclassing，這意謂著 class A 若 include module B，則 B 會變成 A 的爸爸，superclass 無法 override subclass method（總之爸爸無法改變女兒的行為，嘛，至少程式裡面是這樣）。這也是為什麼當初 Rails 會有 <code>Module#alias_method_chian</code> 的原因。</p>

<p>Ruby 2.0 中的 <code>Module#prepend</code> 就是為了解決此問題而生，取代 <code>Module#alias_method_chian</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;A&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Ext</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="k">super</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Ext&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="n">prepend</span> <span class="no">Ext</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt; A</span>
</span><span class='line'><span class="c1"># Ext</span>
</span></code></pre></td></tr></table></div></figure>


<h2>%i：Array of Symbol</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="sx">%w{hurray huzzah whoop}</span>   <span class="c1"># =&gt; [&quot;hurray&quot;, &quot;huzzah&quot;, &quot;whoop&quot;]</span>
</span><span class='line'><span class="nb">p</span> <span class="o">%</span><span class="n">i</span><span class="p">{</span><span class="n">hurray</span> <span class="n">huzzah</span> <span class="n">whoop</span><span class="p">}</span>   <span class="c1"># =&gt; [:hurray, :huzzah, :whoop]</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebConf 2013 會場志工心得]]></title>
    <link href="http://tonytonyjan.net/2013/01/15/webconf-2013-feedback/"/>
    <updated>2013-01-15T23:06:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/01/15/webconf-2013-feedback</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/webconf.png"></p>

<h2>報名</h2>

<p>當初在噗浪上看到<a href="http://www.plurk.com/aquarianboy">龍公</a>發的 Webconf 連結就決定要參加了。那時網路上已經討論的熱烈，正擔心搶不到票時看到了招募志工的公告，志工雖未必能聽所有想聽的議程（大約一半一半），但包吃包住又有交通補助，加上我雖有七年志工經驗，但還沒當過會場志工，於是就報名了。不過這兩天的志工經驗應該會讓我不會再當一次會場志工，雖然認識了不少點頭之交，但想聽的議程幾乎沒有聽到，且我擔任門神組，平時就要注意無線電的訊息，即便沒有當班，仍無法專心聽講，這樣的損失實在太大。</p>

<h2>會場志工</h2>

<p>我在各個慈善機構擔任過志工與領隊，第一次參與中研院的會場志工算是頗新鮮的，這裡的團隊風氣有別於以往我待過的單位，感覺大家沒有想要社交的念頭，直白的說就只是來「和認識的朋友」來當志工而已，雖然這是人之常情，但身為一個第一次參與且不屬於任何親友的人來說，疏離感非常嚴重，我是其中一個，但我會試著去找其他同樣是獨自前來的人交朋友。</p>

<p>大概是受到過去待的單位經驗的影響，其實我一直以為 Webconf 志工會有一個行前訓練，即便沒有，至少也要讓大家互相認識，志工團既是一個共同體，就應該要彼此知道誰是誰，尤其是組長這類角色更要自介，這非常的重要，試想若站崗的新人有個突發狀況卻不知道要找誰，豈不是很糟，而主辦能放心讓這樣的人擔任入口把關的志工，頗是諷刺。說實話這幾天我看到的情景就是：老人們空閒時只顧著跟老人聚在一起，新人只是玩手機、敲筆電，偶爾才跟老人寒暄幾句；而我第二天才知道我的組長和志工總召的臉長什麼樣。</p>

<p>我並不堅持要有行前訓練，但我覺得即便沒有行前志工介紹，至少老人也要多去關心一下新人，而不是讓新人主動去爬越老人們的高牆。其中我認為最扯的是第一天晚上吃披薩時，我因為想認識大家，提議要自我介紹，竟然有個「資深」的會場工作人員說「我覺得自介沒有意義」，不禁讓我覺得「資深」到底只是因為做的久而已就叫資深嗎？如果做了十年、二十年，竟然會覺得自介沒有意義，我不曉得是從來沒有遇到像我這樣的共事者出現來反駁他，還是他自己本身沒有反省過？</p>

<p>這兩天的感想是，我覺得掃地的阿姨比會場志工要好相處，也好親近多了。</p>

<p>我的建議是：</p>

<ol>
<li>如果主辦認為志工的行前訓與社交不是重點，我認為招募時讓既有的志工群找他們的親友團即可，不要公開招募，除了因為彼此認識而人力易於掌控之外，也不會讓老人有尷尬的感覺，新人也不會有疏離感，皆大歡喜。</li>
<li>如果主辦認為志工的行前訓以及狀況的了解是重點，那麼未來應該考慮是否要有個讓會場工作人員彼此熟識的機會。</li>
</ol>


<p>我覺得 Webconf 很成功，但廣大的讚聲已經夠多，那就不差我一個，而且如果主辦與我有默契，我相信主辦寧可要一篇批評文，也不要十篇讚文。</p>

<h2>慶功宴</h2>

<p>仍然是一樣的狀況：大多人並不會想要去認識原本不認識的人，但我後來和幾個工作人員混熟，聽了他們很多故事，整個宴會頗愉快的，燈光美、氣氛佳、食物好吃。中途有和久仰大名的龍公聊天，覺得龍公比想像中要平易近人許多，而且看的出來也是一個程式狂熱者。希望未來有一天可以和他一起做一些玩具來玩。</p>

<h2>小結</h2>

<p>以後還是乖乖花錢當會眾吧，不然好多想聽的議程都沒有聽到，損失更大。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[音樂創作] 獨夜]]></title>
    <link href="http://tonytonyjan.net/2013/01/15/single-night/"/>
    <updated>2013-01-15T20:37:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/01/15/single-night</id>
    <content type="html"><![CDATA[<iframe width="853" height="480" src="http://www.youtube.com/embed/ubz-L9_Oe6w?list=PL1E3D73CA92E288FF" frameborder="0" allowfullscreen></iframe>


<p>似乎很久沒有在部落格上面發布音樂了，加上 Reason 過期之後就沒有在繼續音樂編曲了，大多情況都只是即興彈彈（錄音其實是很累的事情，因為筆者雖能創作，但手指不是這麼靈活。）</p>

<p>Enjoy！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[交往沒這麼神聖 - 被追求者心態]]></title>
    <link href="http://tonytonyjan.net/2012/12/16/simple-love/"/>
    <updated>2012-12-16T14:53:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/12/16/simple-love</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/ring2.jpg"></p>

<p>「因為還沒有很瞭解，現在交往不太好」，傻孩子，若真的瞭解彼此就直接結婚或分手了，還多一段交往浪費時間幹麼？就是因為沒有很熟才有交往去更認識對方。</p>

<p>人都渴望被瞭解，我們平常只看到彼此表象，但就連難得可比平常更瞭解一個人的機會都沒有嘗試一下，只有可惜你失去一個想瞭解你的人，她也失去被你瞭解的機會。除非連普通朋友都未滿，否則這人若不那麼討厭也不會難相處，何不就試一下，即便最後合不來而分開，你也多了一個紅粉朋友，有損失嗎？你一輩子的酒肉朋友與點頭之交已經多到不勝數，但能有幾個了解你的紅粉？</p>

<p>交往就是透過比朋友更深刻的往來彼此瞭解後，若合則婚，不合則分的過程，沒這麼神聖，也不用承諾什麼，本來誰就不欠誰，沒有人有資格要求世上的任何一個人要愛自己，要求承諾的也多走不久（相信我，我是工程師XD）。承諾別亂給，真正的承諾應該要留給婚姻，留給妻子，留給家人。</p>

<p>打個比方，交往就是賭博，以青春為籌碼賭幸福婚姻。但青春不像金錢，是會隨著時間而消逝的。如果換作金錢也會隨著時間變少，我們都知道要早點花掉，買米買衣房買車，不會等全不見才在抱怨當初猶豫太多什麼也沒買；但為何青春比金錢更珍貴又容易貶值，卻不懂把握當下，錯過又錯過，等到三十出頭才在埋怨沒有第一個女朋友。</p>

<p>初戀情人是妻子的案例並不多，是故人說每人至少要談兩次以上的戀愛才步入婚姻。若你忍心第一段感情發生在三十歲，那是個人自由，否則你若跟我一樣俗辣，交往就別太挑，選妻才要挑，況且不交往要怎麼選妻呢？生活可以精彩一點，你看隔壁桌同樣籌碼人都打十圈了，自己還在細數剩下多少籌碼。</p>

<p>不妨就試一下，彩券不括開怎麼知道有沒有中獎？</p>

<p>延伸閱讀：<a href="http://tonytonyjan.net/2012/07/31/love-telless-mindset/">把愛說出來 &ndash; 追求者心態</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TJMarkdownPaste - Markdown with Tex and code highlight]]></title>
    <link href="http://tonytonyjan.net/2012/12/12/tjmarkdownpaste-markdown-with-tex-code-highlight/"/>
    <updated>2012-12-12T07:09:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/12/12/tjmarkdownpaste-markdown-with-tex-code-highlight</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://tonytonyjan.net/images/tjmarkdownpaste.png" width="300"></p>

<ul>
<li><a href="http://tj-markdown-paste.herokuapp.com">TJMarkdownPaste</a></li>
<li><a href="https://groups.google.com/forum/?fromgroups#!forum/tj-markdown-paste">Google Group</a></li>
<li><a href="https://github.com/tonytonyjan/tj-markdown-paste">Github</a></li>
</ul>


<p><a href="http://tj-markdown-paste.herokuapp.com">TJMarkdownPaste</a> is a Markdown bloggin service with Tex mathematical syntax and automatic code highlight.</p>

<p>It aims to build a blogging service that belongs to we engineers and mathematician. It&rsquo;s a leisure project after my work, so there is no explicit schedule or plan. Feel free to <a href="https://github.com/tonytonyjan/tj-markdown-paste">join us</a> if your are interested in our project, then we can work together and discuss about the future of TJMarkdownPaste in the future together. =)</p>

<p><img class="right" src="http://tonytonyjan.net/images/tjmarkdownpaste2.png"></p>
]]></content>
  </entry>
  
</feed>
