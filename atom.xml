<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[不歸錄]]></title>
  <link href="http://tonytonyjan.net/atom.xml" rel="self"/>
  <link href="http://tonytonyjan.net/"/>
  <updated>2013-01-28T00:30:42+08:00</updated>
  <id>http://tonytonyjan.net/</id>
  <author>
    <name><![CDATA[大兜]]></name>
    <email><![CDATA[tonytonyjan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WebConf 2013 會場志工心得]]></title>
    <link href="http://tonytonyjan.net/2013/01/15/webconf-2013-feedback/"/>
    <updated>2013-01-15T23:06:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/01/15/webconf-2013-feedback</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/webconf.png"></p>

<h2>報名</h2>

<p>當初在噗浪上看到<a href="http://www.plurk.com/aquarianboy">龍公</a>發的 Webconf 連結就決定要參加了。那時網路上已經討論的熱烈，正擔心搶不到票時看到了招募志工的公告，志工雖未必能聽所有想聽的議程（大約一半一半），但包吃包住又有交通補助，加上我雖有七年志工經驗，但還沒當過會場志工，於是就報名了。不過這兩天的志工經驗應該會讓我不會再當一次會場志工，雖然認識了不少點頭之交，但想聽的議程幾乎沒有聽到，且我擔任門神組，平時就要注意無線電的訊息，即便沒有當班，仍無法專心聽講，這樣的損失實在太大。</p>

<h2>會場志工</h2>

<p>我在各個慈善機構擔任過志工與領隊，第一次參與中研院的會場志工算是頗新鮮的，這裡的團隊風氣有別於以往我待過的單位，感覺大家沒有想要社交的念頭，直白的說就只是來「和認識的朋友」來當志工而已，雖然這是人之常情，但身為一個第一次參與且不屬於任何親友的人來說，疏離感非常嚴重，我是其中一個，但我會試著去找其他同樣是獨自前來的人交朋友。</p>

<p>大概是受到過去待的單位經驗的影響，其實我一直以為 Webconf 志工會有一個行前訓練，即便沒有，至少也要讓大家互相認識，志工團既是一個共同體，就應該要彼此知道誰是誰，尤其是組長這類角色更要自介，這非常的重要，試想若站崗的新人有個突發狀況卻不知道要找誰，豈不是很糟，而主辦能放心讓這樣的人擔任入口把關的志工，頗是諷刺。說實話這幾天我看到的情景就是：老人們空閒時只顧著跟老人聚在一起，新人只是玩手機、敲筆電，偶爾才跟老人寒暄幾句；而我第二天才知道我的組長和志工總召的臉長什麼樣。</p>

<p>我並不堅持要有行前訓練，但我覺得即便沒有行前志工介紹，至少老人也要多去關心一下新人，而不是讓新人主動去爬越老人們的高牆。其中我認為最扯的是第一天晚上吃披薩時，我因為想認識大家，提議要自我介紹，竟然有個「資深」的會場工作人員說「我覺得自介沒有意義」，不禁讓我覺得「資深」到底只是因為做的久而已就叫資深嗎？如果做了十年、二十年，竟然會覺得自介沒有意義，我不曉得是從來沒有遇到像我這樣的共事者出現來反駁他，還是他自己本身沒有反省過？</p>

<p>這兩天的感想是，我覺得掃地的阿姨比會場志工要好相處，也好親近多了。</p>

<p>我的建議是：</p>

<ol>
<li>如果主辦認為志工的行前訓與社交不是重點，我認為招募時讓既有的志工群找他們的親友團即可，不要公開招募，除了因為彼此認識而人力易於掌控之外，也不會讓老人有尷尬的感覺，新人也不會有疏離感，皆大歡喜。</li>
<li>如果主辦認為志工的行前訓以及狀況的了解是重點，那麼未來應該考慮是否要有個讓會場工作人員彼此熟識的機會。</li>
</ol>


<p>我覺得 Webconf 很成功，但廣大的讚聲已經夠多，那就不差我一個，而且如果主辦與我有默契，我相信主辦寧可要一篇批評文，也不要十篇讚文。</p>

<h2>慶功宴</h2>

<p>仍然是一樣的狀況：大多人並不會想要去認識原本不認識的人，但我後來和幾個工作人員混熟，聽了他們很多故事，整個宴會頗愉快的，燈光美、氣氛佳、食物好吃。中途有和久仰大名的龍公聊天，覺得龍公比想像中要平易近人許多，而且看的出來也是一個程式狂熱者。希望未來有一天可以和他一起做一些玩具來玩。</p>

<h2>小結</h2>

<p>以後還是乖乖花錢當會眾吧，不然好多想聽的議程都沒有聽到，損失更大。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[音樂創作] 獨夜]]></title>
    <link href="http://tonytonyjan.net/2013/01/15/single-night/"/>
    <updated>2013-01-15T20:37:00+08:00</updated>
    <id>http://tonytonyjan.net/2013/01/15/single-night</id>
    <content type="html"><![CDATA[<iframe width="853" height="480" src="http://www.youtube.com/embed/ubz-L9_Oe6w?list=PL1E3D73CA92E288FF" frameborder="0" allowfullscreen></iframe>


<p>似乎很久沒有在部落格上面發布音樂了，加上 Reason 過期之後就沒有在繼續音樂編曲了，大多情況都只是即興彈彈（錄音其實是很累的事情，因為筆者雖能創作，但手指不是這麼靈活。）</p>

<p>Enjoy！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[孩子，交往沒這麼神聖]]></title>
    <link href="http://tonytonyjan.net/2012/12/16/simple-love/"/>
    <updated>2012-12-16T14:53:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/12/16/simple-love</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/ring2.jpg"></p>

<p>「因為還沒有很瞭解，現在交往不太好」，傻孩子，若真的瞭解彼此就直接結婚或分手了，你他媽還多一段交往幹麼？就是因為沒有很熟才有交往去更認識對方。</p>

<p>人都渴望被瞭解，我們平常只看到彼此表象，但就連難得可比平常更瞭解一個人的機會都沒有嘗試一下，只有可惜你失去一個想瞭解你的人，她也失去被你瞭解的機會。除非連普通朋友都未滿，否則這人若不那麼討厭也不會難相處，何不就試一下，即便最後合不來而分開，你也多了一個超友誼的朋友。你一輩子的酒肉朋友與點頭之交已經多到不勝數，但能有幾個紅粉知己？</p>

<p>交往就是透過比朋友更深刻的往來彼此瞭解後，若合則婚，不合則分的過程，沒這麼神聖，也不用承諾什麼，本來誰不欠誰，沒有人有資格要求世上的任何一個人要愛自己，要求承諾的也多走不久（相信我，我是工程師）。承諾別亂給，真正的承諾應該要留給婚姻，留給妻子，留給家人。</p>

<p>打個比方，交往就是賭博，以青春為籌碼賭幸福婚姻。但青春不像金錢，是會隨著時間而消逝的。如果換作金錢也會隨著時間變少，我們都知道要早點花掉，買米買衣房買車，不會等全不見才在靠北當初猶豫太多什麼也沒買；但為何青春比金錢更珍貴又容易貶值，卻不懂把握當下，錯過又錯過，等到三十出頭才在埋怨沒有第一個女朋友。</p>

<p>初戀情人是妻子的案例並不多，是故人說每人至少要談兩次以上的戀愛才步入婚姻。若你忍心第一段感情發生在三十歲，那是個人自由，否則你若跟我一樣俗辣怕的要死，交往就別太挑，選妻才要挑，況且不交往要怎麼選妻呢？生活可以精彩一點，你看隔壁桌同樣籌碼人都打十圈了，自己還在細數剩下多少籌碼。</p>

<p>不妨就試一下，彩券不括開怎麼知道有沒有中獎？</p>

<p>延伸閱讀：<a href="http://tonytonyjan.net/2012/07/31/love-telless-mindset/">把愛說出來 - 追求者心態</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TJMarkdownPaste - Markdown with Tex and code highlight]]></title>
    <link href="http://tonytonyjan.net/2012/12/12/tjmarkdownpaste-markdown-with-tex-code-highlight/"/>
    <updated>2012-12-12T07:09:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/12/12/tjmarkdownpaste-markdown-with-tex-code-highlight</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://tonytonyjan.net/images/tjmarkdownpaste.png" width="300"></p>

<ul>
<li><a href="http://tj-markdown-paste.herokuapp.com">TJMarkdownPaste</a></li>
<li><a href="https://groups.google.com/forum/?fromgroups#!forum/tj-markdown-paste">Google Group</a></li>
<li><a href="https://github.com/tonytonyjan/tj-markdown-paste">Github</a></li>
</ul>


<p><a href="http://tj-markdown-paste.herokuapp.com">TJMarkdownPaste</a> is a Markdown bloggin service with Tex mathematical syntax and automatic code highlight.</p>

<p>It aims to build a blogging service that belongs to we engineers and mathematician. It&#8217;s a leisure project after my work, so there is no explicit schedule or plan. Feel free to <a href="https://github.com/tonytonyjan/tj-markdown-paste">join us</a> if your are interested in our project, then we can work together and discuss about the future of TJMarkdownPaste in the future together. =)</p>

<p><img class="right" src="http://tonytonyjan.net/images/tjmarkdownpaste2.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[活的痛快點]]></title>
    <link href="http://tonytonyjan.net/2012/11/17/how-to-live-a-wonderful-life/"/>
    <updated>2012-11-17T01:56:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/11/17/how-to-live-a-wonderful-life</id>
    <content type="html"><![CDATA[<p>社會上不乏有人抱怨時間過得飛快，然而時間是公平的，真正導致這種感覺的元兇只有一個：一成不變的生活型態。</p>

<p>時間感決定於有多少活著的感覺，而活著的感覺就是記憶。我們不會因為身體成長了三十年，就自動有活了三十年的感覺，而是有三十年的記憶。所以對生活一成不變的人來說，若他今天、昨天、每一天都過得一樣，自然覺得時間過得飛快；同理對每天都不一樣的人來說，每天有值得記憶的事，他活著的感覺會比前者深刻的多。</p>

<p>從小台灣人已經很擅長一成不變的生活，自小學開始白天上課、夜晚補習的生活，十二年來飽受充足的奴性培訓（請看清楚，不是性培訓），面對毫無變化的生活可說是非常的適應，即便到了大學，社團、朋友多了、認識的人也多了，卻也安於校園而走不出學校。出了社會後更是一成不變的上班生活。然而環境本善變，安於現狀豈不無異於逆天行事？</p>

<p>此外也有出社會後就開始抱怨沒有社交圈的人，但筆者認為這不是環境問題。從小我們認識的朋友多來自校園，校園以社團、系隊、校隊還有各種活動等五花八門的環境，讓我們可以輕易參與喜歡的社交圈，不用費心尋找。但一位與真實社會隔絕十幾年的人，一出社會就面臨沒有為他準備各樣社交圈的環境，亦不難理解何有如此埋怨。</p>

<p>長大的過程中從沒有人教我們如何在校外認識社會的人事物，甚至是與陌生人交朋友。然而校園本是社會縮影，是真實社會的子集合，若出了社會就覺得社交圈變小，這也無異於本末倒置不是？</p>

<p><img src="http://tonytonyjan.net/images/freedom.jpg"></p>

<p>筆者並不敢自稱多懂生活，但活了二十年多少有些心得，最後集結成一些戒律用於每天督促自己，此文除紀錄之餘，也想與各位分享。在那之前想先分享一段美國自白派詩人的話，因為她的這段引述，與我等等要闡述的生活觀不謀而合。</p>

<blockquote><p>I can never read all the books I want. I can never be all the people I want and live all the lives I want. I can never train myself in all the skills I want. And why do I want? I want to live and feel all the shades, tones and variations of mental and physical experience possible in life. And I am horribly limited.</p><footer><strong>Sylvia Plath</strong> <cite>Unknown Source</cite></footer></blockquote>




<!-- more -->


<h2>保持好奇心</h2>

<ol>
<li><h3>對世界充滿好奇心</h3>

<p>還記得小時候會因為沒有看過長頸鹿而吵著要去動物園看嗎？就是這個心情。但是長頸鹿只是這個世界的一小小部份而已，世界之大而人一生所能及有限，明知如此人往往卻在逐漸長大之後，對於這世界的萬事萬物已不能像當初吵著去動物園一賭持長頸鹿的心情一樣，充滿好奇與興奮。</p>

<p>沒溜過冰難道不會想嘗試嗎？沒有碰過萬里長城的石磚，也不會想摸摸看嗎？筆者覺得難得來這一趟，如果不好好玩一玩再回去，學個樂器、做個裝置藝術、參加遊行、玩個快閃、極限運動、徒步旅行等等，否則豈不浪費這一張人生的入場券（<a href="http://tonytonyjan.net/2011/12/13/4/">玩世哲學</a>）。</p>

<p>所以要保持好奇心，這是我們出生不久就擁有探索世界的超能力，只是長大往往容易弄丟了，不妨趁現在有發現，趕快撿回來吧！</p></li>
<li><h3>對人充滿好奇心</h3>

<p>世界上有六十億人口，若終其一生社交圈僅來自校園與工作場合，是極其可惜的事。我們對事情的認知、看法與決策，除了書以外，一大部分左右於你我周遭的人。人善群聚而物以類聚，加上人又安於現狀，若沒刻意進入新環境，想法遲早被鎖在一個圈裡卻不自知，屆時自己對同一件事情的看法，和周遭人不會差很多。</p>

<p>舉例以一身為前三志願的大學生，對一件事也許會詢問同學看法，但因彼此太相似：讀同一個科系、同一個學校、受過的教育差不多、多是第一志願高中畢業、多來自前 10% 的家庭。此時我往往會自問，難道就不會想知道別的科系、校園外、抑或別的國家的人的看法嗎？</p>

<p>因而我喜歡認識人，所以盡其所能的去認識新朋友，從勞工到律師、從澎湖到花蓮、從土耳其到墨西哥的筆友。而這也讓我喜歡旅行，一趟旅行能認識的人可多了，如果認識了十個人，就能聽到十個不同的故事、背景、想法。有些人甚至還不知道名字（例如坐搭火車時坐在你旁邊的人），但正因為彼此人脈幾乎沒有交集，反而什麼真心話都敢講出來（<a href="http://tonytonyjan.net/2011/08/30/12/">列車上的女孩</a>）。</p>

<p>聽故事很有趣。試想一下我們走在路上，每一個擦肩過的人都有想去的地方和正要做的事情，我們統統不知道，直到只要搭上第一句話，那感覺很妙。</p>

<p>真的，我們跟陌生人的距離，只有一句話。如果可能的話，真想知道一個認識世界上的每一個人的人，他那看世界的角度會是怎麼樣。</p></li>
<li><h3>永遠不要停止學習</h3>

<p><blockquote><p>生也有涯，而知也无涯，以有涯随无涯，殆已</p><footer><strong>莊子</strong> <cite>莊子養生主</cite></footer></blockquote></p>

<p>這句話聽到快膩了，意思是說：人用有限的生命去追求無窮的知識，是必然失敗的。那既然失敗為什麼還要不停追求？八股的答案很多：「除了充實自己又可以……（略）……能夠拓展視野……（略）……知識無價……（略）」</p>

<p>談論上面太無聊了，不如說說我不停止學習的理由是因為</p>

<h1>爽，太爽了</h1>

<p>因為學會新技能的爽度就跟你養的皮卡丘終於學會十萬福特一樣很有成就感。成就感是每個人生來就會去追求的東西，而學習正是能夠有效保持此感覺的行為，再說誰不喜歡成就感呢？</p>

<p>不妨試著學一些新東西，或為世界留下什麼痕跡，即便結果沒有成功，過程帶來的成長也一樣無價。</p></li>
</ol>


<h2>每天試著完成一件特別的事</h2>

<p>何不突然打電話給自己最討厭的人（抑或最討厭自己的人），好奇過會發生什麼事嗎？大多人大概認為這種事情很無聊，但是我認為正好相反：不做這些事情反而才覺得無聊。</p>

<p>如果你的生活做的每一件事情都要正正經經的，那也太無趣，多一點無理頭和驚喜，生活才有色彩。也許「突然」租個布偶裝嚇嚇讓每個回家的人；也許「突然」死背一段法文、西班牙文等五六國的會話並在公車假裝接手機看看乘客的表情；也許「突然」打電話給最討厭自己的人看他有什麼反應。</p>

<p>我們周遭一定不乏有幾個就是這樣生活的人，他們總是可以想到很多鬼點子去付諸行動，而在待在他們身邊總是有聽不完的有趣故事。</p>

<p>正因為我們生活中可以做的遠比我們想到的還要多太多，多到計畫每個明天都會覺得時間不夠，身在如此自由的環境，如果還抱怨生活無聊，那聽起來是相當滑稽的事。何不做點什麼不一樣的，幫自己也幫別人寫下難忘的故事？不可預測的未來才是最吸引人的，而不可預測的未來自不可預測的行為。</p>

<h2>開始寫下自己的故事吧</h2>

<ol>
<li><h3>寫下人生</h3>

<p>「寫」未必就是寫在紙上，我們每天都在人生的書頁上「寫」自己的故事，是故有人比喻人生彷彿在寫作一樣：給一些設定（家庭背景、出生年月等），然後我們根據這些設定自由的揮灑自己的人生故事。只是每個人文筆大不同，雖給予了自由的文體又不限風格，仍有人會寫得老八股、平凡而單調；有的卻能高潮迭起、多采多姿。</p>

<p>人會被故事所吸引，而人的魅力終究來自他是不是一個有故事的人，他的外表、才氣反而其次。不禁試問自己是個有故事的人嗎？給予十分鐘的自我介紹，是否也能說出與眾不同的故事？</p></li>
<li><h3>寫下夢境</h3>

<p>有一說是人做夢的世界才是現實，而現實則是相對另一個世界的夢中世界。人長壽與否不在壽命，而是活著的感覺。如果你每天做的夢都能記得，就意謂著你比別人多活了 1.5 倍甚至更長的壽命，這聽起來很酷吧？</p>

<p>我喜歡紀錄自己的夢，夢也是生活的一部分，所以感覺就像在紀錄自己的生活一樣，況且夢通常是比現實更有意思卻又更容易遺忘事，不馬上寫下一定會忘記。</p>

<p>翻山越嶺最後找到飛天麵條怪物、在機器王國發現自己也是機械人、和鏡子的自己對話……</p>

<p>彷彿每個夢都是一部科幻小說，而自己是主演，這怎麼叫我不興奮。</p></li>
</ol>


<h2>當一個好好先生（太太）</h2>

<p>能者多勞？也是，但我更相信「勞者多能」。</p>

<p>筆者從小就是個不懂拒絕的人，但這個缺點卻給我帶來許多好處，在校園中只要問到我要不要參加什麼時，我都會先答應。參與的比賽從演講、板雕、水彩、音樂創作、笑話大賽到擔任班級幹部、班聯會幹部、畢業代表、專案隊長、活動組長、畢冊製作者。</p>

<p>至於從中學習到的東西，能力面從統領、策劃、創意、溝通，到性格上的耐性、包容、體諒、接納統統都有。我承認這些經驗讓我在未來解決許多難題時有很大的幫助。</p>

<p>此外勇於說「是」，也能帶來不少機會，舉些例子：</p>

<blockquote><p>  女：「你知道高鐵站怎麼去嗎？能否指引我？」</p>

<p>  我：「喔，好啊。」</p></blockquote>

<p>我是這樣認識我的紅粉知己的。</p>

<blockquote><p>  學長：「學弟，最近有個微軟的比賽，雖然你無法報名，不過要不要玩玩看？」</p>

<p>  我：「喔，好啊。」</p></blockquote>

<p>因此認識了他們的指導教授，就得到了一個進去研究所的機會。</p>

<blockquote><p>  學長：「學弟，最近工研院有人在找工程師，要不要去面試看看？」</p>

<p>  我：「喔，好啊。」</p></blockquote>

<p>然後我就真的得到一份工研院的工作。</p>

<blockquote><p>  網友：「我有個創業點子，要不要一起來？」</p>

<p>  我：「喔，好啊。」</p></blockquote>

<p>因此認識了同樣被拉進來的工程師，透過這個工程師認識了更多的業界知名的高手，交流之下我的功力也大增。</p>

<p>樂於嘗試各種事，除了增廣見聞、會的多、可能也有意想不到的好運，畢竟「機會」向來多被「說好的人」拿走。所以下次如果有人跟你邀請些什麼，只要不是太難為情的事情，就勇於說好吧，說不定你的奇幻之旅正要展開！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Rails Template]]></title>
    <link href="http://tonytonyjan.net/2012/11/04/tony-jians-rails-template/"/>
    <updated>2012-11-04T16:24:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/11/04/tony-jians-rails-template</id>
    <content type="html"><![CDATA[<h2>Why</h2>

<p>We engineers always hate repeating doing the same thing.</p>

<p>Take me for instance, everytime I create a new rails project, I edit <code>GemFile</code> to install lots of useful gems such as <code>devise</code>, <code>carrierwave</code>, etc, and then download <a href="http://twitter.github.com/bootstrap/">Twitter Bootstrap</a> with newest version, extract it into <code>vendor/assets/images</code>, <code>vendor/assets/javascripts</code> and <code>vendor/assets/stylesheets</code>, finally, replace <code>../img/xxx.png</code> into <code>xxx.png</code> in <code>bootstrap.css</code> and <code>bootstrap.min.css</code>.</p>

<h2>What</h2>

<p>My template does two things:</p>

<ol>
<li><p>Automatically install the following gems:</p>

<ul>
<li>devise</li>
<li>cancan</li>
<li>carrierwave</li>
<li>simple_form</li>
<li>dynamic_form</li>
<li>will_paginate</li>
<li>rdiscount</li>
<li>rails-i18n</li>
</ul>
</li>
<li><p>Download Twitter Boostrap with the newest version, and correspondingly extract files into <code>vendor/assets/</code></p></li>
</ol>


<h2>Usage</h2>

<pre><code>rails new myapp -m=https://raw.github.com/gist/4010690
</code></pre>

<p>Alternatively, if you encounter some SSL problem during the previous command, please download the file directly and run:</p>

<pre><code>rails new myapp -m=filename
</code></pre>

<!-- more -->


<h2>Source Code</h2>

<div><script src='https://gist.github.com/4010690.js'></script>
<noscript><pre><code># Generate home controller
File::unlink &quot;public/index.html&quot;
generate(:controller, &quot;home index about contact&quot;)
route &quot;root :to =&gt; 'home#index'&quot;

# Install gem

## Access
gem &quot;devise&quot;
gem &quot;cancan&quot;
## Storage
gem &quot;carrierwave&quot;
## View
gem &quot;simple_form&quot;
gem &quot;dynamic_form&quot;
gem &quot;will_paginate&quot;
## Markup
gem &quot;rdiscount&quot;
## i18n
gem &quot;rails-i18n&quot;
## Dev
gem_group :development do
  gem &quot;faker&quot;
end

# Install Twitter Boostrap to vendor/assets/
require 'zip/zip'
bootstrap_zip = open(&quot;http://twitter.github.com/bootstrap/assets/bootstrap.zip&quot;)
Zip::ZipFile.open(bootstrap_zip) do |zipfile|
  zipfile.each{|entry|
    base_name = File::basename(entry.name)
    case entry.to_s
    when /bootstrap\/js\/.+/
      vendor(&quot;assets/javascripts/#{base_name}&quot;, entry.get_input_stream().read())
    when /bootstrap\/css\/.+/
      vendor(&quot;assets/stylesheets/#{base_name}&quot;, entry.get_input_stream().read().gsub(/&quot;.*\/(.*\.png)&quot;/, '&quot;\1&quot;'))
    when /bootstrap\/img\/.+/
      vendor(&quot;assets/images/#{base_name}&quot;, entry.get_input_stream().read())
    end
  }
end

# First Commit
git :init
git :add =&gt; &quot;.&quot;
git :commit =&gt; '-m &quot;init&quot;'</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[台北一夜]]></title>
    <link href="http://tonytonyjan.net/2012/10/06/one-night-in-taipei/"/>
    <updated>2012-10-06T23:34:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/10/06/one-night-in-taipei</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/snow.jpg"></p>

<p>昨晚達成了夜宿小七的成就，然後體驗到了台北的溫情，以及目睹一些白天所看不到的景象。</p>

<!-- more -->


<p>這天因為晚上六點半要赴敦安討論某個廣達的雲端計畫，本來打算結束後就回新竹了。突然台北的朋友一通電話打來把我給嚇到，因為我不曾聽她如此泣不成聲的跟我敘述一件事情，至於事情的來龍去脈我就略了，重點是我決定晚上去陪陪這位朋友，於是除開會之外，在台北又多了一個行程。</p>

<p>會議約莫在九點半結束，等我到南港與那位朋友會面時已經十點，我們就逛饒河街夜市，我一邊吃一邊聽的，就這樣一直到十一點半。老實說當我決定陪這人散散心時，就沒打算要搭最後一班車回去了，以前也不是沒有露宿的經驗，但是這種事情我絕對不想再做第三次。</p>

<p>因為捷運已經沒車了，這位朋友好心的將我載到了北車附近，然後她就回去睡覺了。至於我呢？火車和客運都沒車了，在搭上隔天早上五點的首班車之前，我得找個地方打發漫漫長夜。</p>

<p>凌晨一點多，我開始在北車附近散步起來，我才知道原來北車的街友都在這個時候出現，而且數量比我預想的要多，我只是繞著北車大廳外圍一圈而已，大概二三十不等，而且通常會三五人睡在一區。怎說，我對台北的現代、繁華印象，被這一幕改觀了，但想到這裡又不禁好奇，白天他們又到哪裡去呢？</p>

<p>然後我在大門口找到一個守夜的保全，並且跟他聊起天來。原來一直以來都有一群被遺忘的人們，為了都市的秩序，每個晚上在自己的崗位守著。</p>

<blockquote><p>我：「一個人守夜，晚上又這漫長，一定很辛苦吧！」<br/>他笑著說：「哈，就加減賺嘛！」</p></blockquote>


<p>我後來問他附近是否有旅社，他很熱心的拿起傳說中的智慧型手機為我搜索與指引（筆者還在用智障型手機），我就照著他的只是，出發探險了。</p>

<p><img class="right" src="http://tonytonyjan.net/images/7-11.jpg"></p>

<p>經過一番斟酌，我決定在附近的 7-11 落腳，理由是旅社都太貴了，一晚都要一千起跳，不如找個便利商店，有吃有喝有得坐，還有書本雜誌可以翻，這時快要兩點，反正三個小時一下就過了，我就買個飲料，坐下來一邊喝一邊發呆。</p>

<p>不一下子，兩個活潑的女生走進來，消費之後打算也坐下來吃，但位子就三個，我坐在正中間，我察覺她們想坐便立馬移動到邊邊，並示意她們請坐。</p>

<blockquote><p>二女：「謝謝你，我們只是吃個宵夜而已，不會坐很久。」<br/>我：「別客氣，我可要坐到天亮呢！」</p></blockquote>


<p>好奇使然，她們向我追問下去，然後就這樣聊開了。一問之下這兩個人是台大醫院的護士，而且是今年畢業，今天是小夜班，結束後相約來此宵夜。至此但覺緣份真是奇妙，想不到只是來小七坐著，就遇到兩個同一屆同學。</p>

<p>坐在我旁邊的是典型黑框眼鏡馬尾姑娘（非常令人賞心悅目），就這般相談甚歡，她還分享了一部分的宵夜給我（但實際上只要看就看飽了）。我感受到台北的溫情，感動之至，頓時不能言語。</p>

<p>一個晚上遇到街友、保全、護士，還有其他沒有在文章出現的櫃台職員等，我看到的是每個人縱使再怎麼不同抑或沒有交集，都一樣努力的用自己的方式活下去，日復一日，年復一年。不禁反思一樣也在過日子的我，活得再苦也應無所抱怨，每個人都一樣要活著，百個人有百個活法，百種業障，我如果因為受不了自己的業就抱怨起來，對其他正在努力活著人，豈不是莫大的失敬。</p>

<p>註：而此夜遇到的每個人，散場後我皆沒有留下任何名字，一切遭遇只有封存在記憶裡面，但記憶會消逝，趁著還能憶起，捎筆寫下，以供他日回味。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大兜的 gcc 歷險記]]></title>
    <link href="http://tonytonyjan.net/2012/10/02/dig-gcc-with-tony/"/>
    <updated>2012-10-02T13:13:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/10/02/dig-gcc-with-tony</id>
    <content type="html"><![CDATA[<p>由於不是很清楚 gcc 在編譯 c 文件時到底做了什麼事情，於是展開了深入理解的旅程。從最簡單的 <code>hello.c</code> 開始：</p>

<figure class='code'><figcaption><span>hello.c</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">args</span><span class="p">[]){</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello, world!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在編譯之前，讓我們回顧一下編譯的步驟：</p>

<table>
<thead>
<tr>
<th>步驟                   </th>
<th> 指令                      </th>
<th> 中出檔</th>
</tr>
</thead>
<tbody>
<tr>
<td>                       </td>
<td>                           </td>
<td> 原始碼</td>
</tr>
<tr>
<td>前處理（preprocessing）</td>
<td> gcc -E hello.c -o hello.i </td>
<td>   ↓↓</td>
</tr>
<tr>
<td>                       </td>
<td>                           </td>
<td> 原始碼（標頭被展開）</td>
</tr>
<tr>
<td>編譯（compiling）      </td>
<td> gcc -S hello.i -o hello.s </td>
<td>   ↓↓</td>
</tr>
<tr>
<td>                       </td>
<td>                           </td>
<td> 組合語言</td>
</tr>
<tr>
<td>組譯（assembling）     </td>
<td> gcc -c hello.s -o hello.o </td>
<td>   ↓↓</td>
</tr>
<tr>
<td>                       </td>
<td>                           </td>
<td> 機器碼</td>
</tr>
<tr>
<td>連結（linking）        </td>
<td> ld &#8230; （暫略）           </td>
<td>   ↓↓</td>
</tr>
<tr>
<td>                       </td>
<td>                           </td>
<td> 可執行機器碼</td>
</tr>
</tbody>
</table>


<pre><code>-E 僅作預先處理，不進行編譯、組譯和連結
-S 編譯到組合語言，不進行組譯和連結
-c 編譯、組譯到目的程式碼，不進行連結
</code></pre>

<p>看到鍵盤上的 <code>Esc</code> 了嗎？那正是編譯步驟，是不是超好記的。</p>

<!-- more -->


<h2>前處理（Preprocessing）</h2>

<pre><code>gcc -E hello.c -o hello.i
</code></pre>

<p>在這個步驟裡面會把標頭（header）一一展開，即範例中的 <code>stdio.h</code>，展開之後取代 <code>#include&lt;stdio.h&gt;</code>，我的 <code>hello.i</code> 就多了四百多行，看起來像是這樣子：</p>

<pre><code>// 以上 432 行略，建議自己 DIY 看看
int main(int argc, char* args[]){
  printf("Hello, world!");
}
</code></pre>

<h2>編譯</h2>

<pre><code>gcc -S hello.i -o hello.s
</code></pre>

<table>
<thead>
<tr>
<th>步驟                              </th>
<th> 輸出檔</th>
</tr>
</thead>
<tbody>
<tr>
<td>                                  </td>
<td> Sequence of characters</td>
</tr>
<tr>
<td>lexical analysis                  </td>
<td> ↓↓</td>
</tr>
<tr>
<td>                                  </td>
<td> Sequence of lexical elements</td>
</tr>
<tr>
<td>parsing                           </td>
<td> ↓↓</td>
</tr>
<tr>
<td>                                  </td>
<td> Syntax tree</td>
</tr>
<tr>
<td>semantic analysis                 </td>
<td> ↓↓</td>
</tr>
<tr>
<td>                                  </td>
<td> Annotated syntax tree</td>
</tr>
<tr>
<td>generation of intermediate code   </td>
<td> ↓↓</td>
</tr>
<tr>
<td>                                  </td>
<td> Sequence of IL</td>
</tr>
<tr>
<td>optimization of intermediate code </td>
<td> ↓↓</td>
</tr>
<tr>
<td>                                  </td>
<td> Sequence of IL</td>
</tr>
<tr>
<td>generation of pseudo code         </td>
<td> ↓↓</td>
</tr>
<tr>
<td>                                  </td>
<td> Assembly program</td>
</tr>
</tbody>
</table>


<p>編譯就是把原始碼轉換成目的語言的動作（通常就是組合語言）</p>

<figure class='code'><figcaption><span>hello.s</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'>  <span class="nf">.file</span> <span class="s">&quot;hello.c&quot;</span>
</span><span class='line'>  <span class="nf">.def</span>  <span class="nv">___main</span><span class="c1">;  .scl  2;  .type 32; .endef</span>
</span><span class='line'>  <span class="nf">.section</span> <span class="nv">.rdata</span><span class="p">,</span><span class="s">&quot;dr&quot;</span>
</span><span class='line'><span class="nl">LC0:</span>
</span><span class='line'>  <span class="nf">.ascii</span> <span class="s">&quot;Hello, world!\0&quot;</span>
</span><span class='line'>  <span class="nf">.text</span>
</span><span class='line'>  <span class="nf">.globl</span>  <span class="nv">_main</span>
</span><span class='line'>  <span class="nf">.def</span>  <span class="nv">_main</span><span class="c1">;  .scl  2;  .type 32; .endef</span>
</span><span class='line'><span class="nl">_main:</span>
</span><span class='line'><span class="nl">LFB6:</span>
</span><span class='line'>  <span class="nf">.cfi_startproc</span>
</span><span class='line'>  <span class="nf">pushl</span> <span class="o">%</span><span class="nb">ebp</span>
</span><span class='line'>  <span class="nf">.cfi_def_cfa_offset</span> <span class="mi">8</span>
</span><span class='line'>  <span class="nf">.cfi_offset</span> <span class="mi">5</span><span class="p">,</span> <span class="o">-</span><span class="mi">8</span>
</span><span class='line'>  <span class="nf">movl</span>  <span class="o">%</span><span class="nb">esp</span><span class="p">,</span> <span class="o">%</span><span class="nb">ebp</span>
</span><span class='line'>  <span class="nf">.cfi_def_cfa_register</span> <span class="mi">5</span>
</span><span class='line'>  <span class="nf">andl</span>  <span class="kc">$</span><span class="o">-</span><span class="mi">16</span><span class="p">,</span> <span class="o">%</span><span class="nb">esp</span>
</span><span class='line'>  <span class="nf">subl</span>  <span class="kc">$</span><span class="mi">16</span><span class="p">,</span> <span class="o">%</span><span class="nb">esp</span>
</span><span class='line'>  <span class="nf">call</span>  <span class="nv">___main</span>
</span><span class='line'>  <span class="nf">movl</span>  <span class="kc">$</span><span class="nv">LC0</span><span class="p">,</span> <span class="p">(</span><span class="o">%</span><span class="nb">esp</span><span class="p">)</span>
</span><span class='line'>  <span class="nf">call</span>  <span class="nv">_printf</span>
</span><span class='line'>  <span class="nf">leave</span>
</span><span class='line'>  <span class="nf">.cfi_restore</span> <span class="mi">5</span>
</span><span class='line'>  <span class="nf">.cfi_def_cfa</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">4</span>
</span><span class='line'>  <span class="nf">ret</span>
</span><span class='line'>  <span class="nf">.cfi_endproc</span>
</span><span class='line'><span class="nl">LFE6:</span>
</span><span class='line'>  <span class="nf">.def</span>  <span class="nv">_printf</span><span class="c1">;  .scl  2;  .type 32; .endef</span>
</span></code></pre></td></tr></table></div></figure>


<h2>組譯</h2>

<pre><code>gcc -c hello.s -o hello.o
</code></pre>

<p>組譯之後會產生目的檔（hello.o），裡面全都是機器碼。</p>

<p>但因為我們還少了連結的動作，所以 <code>hello.o</code> 還無法被執行。</p>

<h2>連結</h2>

<pre><code>ld -o hello.exe c:/mingw/bin/../lib/gcc/mingw32/4.7.0/../../../crt2.o hello.o -lmingw32 -lmoldname -lmingwex -lmsvcrt -ladvapi32 -lshell32 -luser32 -lkernel32
</code></pre>

<p>你大概感到好奇為什麼 <code>hello.o</code> 和 <code>hello.exe</code> 平平都是機器碼，少了連結，前者就無法執行。</p>

<p>這個程式就只是在黑窗上面印出一個「Hello, world!」，但我們並沒有真的去實做 IO 處理或是送訊號去顯卡，因為這些繁瑣的工作全交給 <code>printf</code> 完成了。然而在編譯的過程，編譯器並不知道 <code>printf</code> 編譯好的機器碼放在哪裡（可能在一個 <code>.obj</code> 或 <code>.lib</code> 裡面），所以在產生目的檔時，會在 <code>printf</code> 的進入點留位置給連結器（linker）去做填空，等連結器收集了所有需要的機器碼之後，才將他們填上。</p>

<p>這也是為什麼可執行檔會比原來的原始碼大很多，因為連結器插入了很多來自其他檔案的機器碼。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TJDict - Chrome 英漢、漢英網路集成字典]]></title>
    <link href="http://tonytonyjan.net/2012/08/17/tjdict-english-chinese-dictionary-for-chrome/"/>
    <updated>2012-08-17T01:53:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/08/17/tjdict-english-chinese-dictionary-for-chrome</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/tjdict3.png"></p>

<p><a href="http://chrome.google.com/webstore/detail/caafmojgjlbflohillejdmnghkpcjjpp">點我安裝</a></p>

<h2>為什麼要做這個？</h2>

<p>除了吃飽太閒之外，靈感來自於 Lingoes 這套軟體，那是一套可以整合各大字典且可以日漸擴充的軟體，我於是想動手做一個網頁版的，但想想其實也不需要架設 server，就把念頭動到 chrome 上面，這就是 TJDict 的由來。</p>

<p><img src="http://tonytonyjan.net/images/tjdict2.gif"></p>

<h2>查詢方法</h2>

<ol>
<li>在網頁上對單字 Ctrl + 滑鼠雙擊</li>
<li>反白單字後右鍵</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[把愛說出來 - 追求者心態]]></title>
    <link href="http://tonytonyjan.net/2012/07/31/love-telless-mindset/"/>
    <updated>2012-07-31T23:21:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/07/31/love-telless-mindset</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/ring.jpg"></p>

<p>如果你喜歡一個人，就行動吧，在你還喜歡對方的時候。</p>

<p>其實告白最怕的，不外乎就是遭打槍，次者就是以後碰面會尷尬。會怕是正常的，因為既是人則有得失心，有得失心，對於得不到的就會可惜。</p>

<p>我說告白又不用錢，怕什麼呢？本來就不擁有的東西，又何必在意得不到？我們也不會因為出門沒有撿到錢而難過吧？如此又何必因為告白是否成功而煩惱？</p>

<p>人對於知道自己被人喜歡，無論你我，一定都是相當欣喜的，既然不用錢，不需要吝於把這樣的欣喜送出去，今天假如我是想告白的對象，卻又沒有行動，豈不像準備了一個禮物，卻沒送出去一樣。所以當你喜歡一個人，得把握當下趕緊行動，一則你不知道你手上這份禮物對方能否收得到，二則也不知道什麼時候會變成送給別人的。</p>

<p>至於會尷尬，不過就是得失心太重罷了，喜歡不代表就要在一起，這應該分開來看，或許將此番心意是當成是一份禮物，也就不會這麼尷尬了。告白不用錢，既然能帶給一個人喜悅，何樂不為？得失心放輕，又何懼尷尬？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[先放下，再拿起]]></title>
    <link href="http://tonytonyjan.net/2012/07/21/always-keep-a-leeway/"/>
    <updated>2012-07-21T01:55:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/07/21/always-keep-a-leeway</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/birds3.jpg"></p>

<p>事事難料，由於不知道下一秒會發生什麼事情，往往因受挫而不知所措，畢竟人在豪無準備之下發生了預期之外之事，任誰都難以冷靜以對：以為能過的科目沒過、以為能白頭偕老的戀情告吹、以為可以追到的人被打槍、以為能順利退休的工作被公司裁員、以為能順遂活著卻突然家有變故等等。一生數個大大小小的意外，成了生活的痛苦來源。</p>

<p>人說「凡是要留退路」，這聽到要老掉牙了，但人如果真的懂得記得起教訓，我論此話也傳唱不下去。我偶爾懷疑究竟人要經歷多少個「意外」才懂得這個道理呢？多少人辦得到在榜單公佈前就先坦然接受落榜了？在一段感情開始之前就先坦然接受分手了？或在父母健在時就坦然接受他們的離去的時候？有工作時接受失業？在年輕時擁抱衰老？抑或在還活著時先面對死亡？</p>

<p>放不下的，當初就別拾起；不得已拾起的，也得學習坦然放下，人本來就一無所有，不管拿什麼都嫌太多。</p>

<p>如果你能在結婚時就接受離婚或另一半遇小三，屆時真的發生也不至於在崩潰邊緣想辦法還不知道下一步何去何從。說我在嗆衰？這不是嗆衰，筆者認為這應該是一種生活方法，理智地應付生活中的各種意外，否則還要等到事發才在調適心情兼想辦法嗎？</p>

<p>人卻很奇怪的，明知處事本該如此：辦活動要有雨備、人力備、場備、器材備以及各種突發狀況的進退應對（如某成員無法出席等）；與人談判知道特定對話要有各種回答；打線上團戰遊戲面對各種意外有事先準備好的處理程序。人處事能如此，何以做人不能同焉？</p>

<p>理由不過是因為人太自私、太貪心。這讓人們喜歡用「失去」使其扮演悲劇主角，但事實上，人沒有任何事物是應得的，又談何失去？意即能先接受未來的分手，再決定去交往，反正人生來就單身、能先接受婚姻的不美滿，再去追求婚姻，反正人生本來就孤寡、能先承受負債，再去賭博、能先擁抱努力過後的失敗，再去追求夢想。當然，能辦到先擁抱死亡，再活下去，是最好不過了，只是能做到這點也許比上述的難的多。舉了這麼多例子，我想這道理還不至難以理解。</p>

<p>你可能會猜我這種思維是悲觀的，我可不認為。凡事往壞處想，卻沉浸在悲悔之中，方謂悲觀；如能凡事往壞處想卻還能事先見招拆招、備好進退應對，能於事發之時仍有泰山崩於前而色不變之姿、心如止水而處之泰然，比起前述呼天搶地、哭爸哭母，這種先人一步消化壞事的風格，豈不一種變相的樂觀？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Masonry - 好用的動態排版工具]]></title>
    <link href="http://tonytonyjan.net/2012/07/08/masonry-a-dynamic-layout-plugin-for-jquery/"/>
    <updated>2012-07-08T14:12:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/07/08/masonry-a-dynamic-layout-plugin-for-jquery</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/masonry-demo.png"></p>

<p><a href="http://masonry.desandro.com">官網</a></p>

<p>昨天看到社上 JS 大神<a href="http://www.facebook.com/photo.php?fbid=4451976741683&amp;set=a.1753065630592.2102379.1357466415&amp;type=1&amp;theater&amp;notif_t=photo_reply">喔哩</a>正在寫類似 <a href="https://chrome.google.com/webstore">Google Web Store</a> 首頁那樣的圖形排版（雖然他說不太一樣）。但我想這麼常見的東西應該有可用的函式庫，果然餵狗之後被我找到了一個好用工具 <a href="http://masonry.desandro.com">Masonry</a>。</p>

<p>如果還不太懂這東西是幹麼的，不如先看看我做的簡單<a href="http://tonytonyjan.net/demo/masonry/">示範</a>，瀏覽時不妨試著調整瀏覽器視窗大小，圖片的排版會隨著視窗可視範圍而改變。</p>

<!-- more -->


<h2>使用</h2>

<h3>HTML</h3>

<p>先準備好要排版的項目，正規結構如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;item&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;item&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;item&quot;</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  ...
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;/path/to/jquery.masonry.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>由於 Masonry 有些特效仰賴 jQuery，所以在引入 <code>masonry.js</code> 之前要先引入 <code>jquery.js</code>，如果你覺得麻煩，Masonry 後期也很貼心的提供了純 JS 版：<a href="http://vanilla-masonry.desandro.com/">Vanilla Masonry</a></p>

<h3>CSS</h3>

<p>將所有的項目設定成浮動的（floated），寬度也最好設定，否則容易排出空隙。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.item</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="m">220px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">margin</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">float</span><span class="o">:</span> <span class="k">left</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>JavaScript</h3>

<p>建議要設定 <code>itemSelector</code>，不設定也可以，他會自己抓 container 裡面的所有 elements。另外官方也建議設定 <code>columnWidth</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#container&#39;</span><span class="p">).</span><span class="nx">masonry</span><span class="p">({</span>
</span><span class='line'>    <span class="c1">// options</span>
</span><span class='line'>    <span class="nx">itemSelector</span> <span class="o">:</span> <span class="s1">&#39;.item&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">columnWidth</span> <span class="o">:</span> <span class="mi">240</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>完成了，更多的使用方式請<a href="http://masonry.desandro.com/docs/intro.html">看這裡</a>。</p>

<h2>非官方叮嚀</h2>

<p>當然，如果只是翻譯一下文件就拍屁股走人未免也太不夠意思，我其實另外發現官方文件少提醒了一點我覺得很重要的部份：</p>

<p>如果你只是單純照著官方文件在 item 裡面放大小不一的圖片：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;item&quot;</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;...&quot;</span> <span class="nt">/&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;item&quot;</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;...&quot;</span> <span class="nt">/&gt;&lt;/div&gt;</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>不難碰上一些問題：</p>

<ol>
<li>跑出一大堆空隙，無法漂亮的排版。</li>
<li><code>div</code> 的高度比 <code>img</code> 大，圖片上下之間有空隙，而且這個空隙即使你丟了一個 <code>reset.css</code> 也無法獲得解決。</li>
</ol>


<p><img src="http://tonytonyjan.net/images/masonry-demo2.png"></p>

<p>原因出在 <code>&lt;img&gt;</code> 預設是 <code>inline</code>，且對於排版長寬不等的圖片還要求沒有空隙本來就不太合理，所以我們再加上新的 CSS 設定：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.item</span> <span class="nt">img</span><span class="p">{</span>
</span><span class='line'>  <span class="k">display</span><span class="o">:</span> <span class="k">block</span><span class="p">;</span>
</span><span class='line'>  <span class="k">max-width</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>乾杯！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[計算主題熱門度的演算法（上）]]></title>
    <link href="http://tonytonyjan.net/2012/07/05/building-popularity-algorithm/"/>
    <updated>2012-07-05T11:17:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/07/05/building-popularity-algorithm</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/ranking.jpg"></p>

<p>很多網站都會在文章主題上加上評分的功能（五星評分、喜歡不喜歡、加一減一），主要用於計算主題的熱門程度，並加以排序，評分越高表示這篇主題越熱門，能見度也越高。</p>

<p>評分實做很容易，但排序不簡單，在實做排序過程中會面臨不少問題：</p>

<ul>
<li>經驗不足的工程師會重造輪子，套用自己的演算法，不懂得使用統計公式帶來的好處</li>
<li>必須防範那些會意圖使自己的文章排序在最上面的 spammer</li>
<li>複雜度太高的演算法導致系統負載過高</li>
</ul>


<p>這篇文章會試著介紹一些排序演算法，從簡單到複雜，並介紹其優缺點，也會分享一些知名網站的排序演算法。就讓我們從最簡單的開始吧：</p>

<!-- more -->


<h2>評分決定熱門</h2>

<p>假設我們的資料庫已經存著數筆資料，也許是文章或影音，而我們可以透過評分去排序其熱門度：</p>

<p><strong>熱門度 = 總評分</strong></p>

<pre><code>SELECT * from posts ORDER BY vote ASC|DESC
</code></pre>

<p>這個演算法實做上最簡單，但也很糟糕。通常我們會希望新主題可以有一定的能見度，但如果套此演算法，在首頁可能會被到好幾年前的熱門文章所霸佔，新主題無法置頂，也因能見度不高，難以翻身。加上也許幾篇熱門主題會因為網站離峰時段導致評分較低，例如上個月的熱門主題可以得到一百分，這個月因為暑假大家出去玩，同樣熱門的主題只能拿十分，這樣的算法明顯不公平。</p>

<h2>考慮時間</h2>

<p>讓我們在公式上加一個時間變數，越年輕的主題會有較高的機會出現在首頁，很合理吧？</p>

<p><strong>熱門度 = 總評分/主題壽命</strong></p>

<pre><code>主題壽命 = 現在時間 - 主題發布時間
</code></pre>

<p>對於越老得文章，變得熱門必須要有相對越多的評分。乍看之下沒問題，但這方法仍是不公平的。理由很簡單，試想一下一篇凌晨三點發布的主題，由於這時間是離峰時期，即使這主題真的很棒，卻因為大多人當時都在睡覺，導致相較於白天才發布的主題，這篇超炫主題已經輸在起跑點。</p>

<p>為了改善這個問題，我們再變換一下公式：</p>

<p><strong>熱門度 = Σ(評分/評分壽命)</strong></p>

<pre><code>評分壽命 = 現在時間 - 評分時間
</code></pre>

<p>越年輕的評分有較大的權重，乍看確實解決了剛剛的離峰問題，但卻有新的麻煩：如果一個人對一個好幾年前的主題投下一票，這一票將會比這幾年來，在這主題上的任何評分要來得值錢，導致老舊的主題會再一次出現在首頁。所以我們還得再考慮主題壽命，於是公式變成：</p>

<p><strong>熱門度 = [Σ(評分/評分壽命)]/主題壽命</strong></p>

<p>對於上一個公式再除以主題壽命，以防主題回春，好極了，這下上述所有問題都獲得解決，但你是否發現這個演算法潛藏的危機？他的複雜度太高以致計算成本昂貴，難以在現實的系統中實現。</p>

<p>由於該演算法非常依賴時間，每一秒的熱門都會改面，設計上需要每幾秒刷新整個資料庫（或幾分鐘，單看系統設計需要的即時程度而定），這對高流量的網站來說簡直惡夢。</p>

<p>因為這方法用起來不太妙，我來介紹另一個簡單的替代方案：</p>

<h2>Bayesian Average</h2>

<p>假設我們的設計是喜歡某個主題，給他 +1，討厭就 -1，而一個主題評分則是所有的正評除以評分總數，所以公式變成：</p>

<p><strong>主題分數 = 正評數/(正評數+負評數)</strong></p>

<p>所以主題分數的值會介於 0 到 1 之間。</p>

<p>但這樣設計仍有個問題，假設有一個主題在經過幾百人的評分之後得到 0.96，另一個主題只有 2 個人評分，且都給予正評，於是這個主題躍然成了平分為 100% 的主題！這和我們想要的不一樣：</p>

<ol>
<li>我們希望當一個主題只有少數人評分時，權重應比較低。</li>
<li>反之一個主題有大量的人去評過分，權重比較高。</li>
</ol>


<p>熱門度的可信度應決定於評分人數的多寡，一個主題的評分人數越多，則計算出來的熱門度也比較趨近於真實情況，評分人數少，則計算的結果則可能與實際結果相差甚遠。</p>

<p>而求解這個問題也不是什麼新鮮的研究，因為公式在幾百年前就被發明了：<a href="http://en.wikipedia.org/wiki/Bayesian_average">Bayesian Average</a></p>

<p>利用 Bayesian Average，可以把公式改為：</p>

<p>熱門度 = ((C*所有主題平均評分)+該主題總分)/(C+該主題受評數)</p>

<pre><code>C = 所有主題平均受評數
該主題總分 = 該主題受評數*主題分數
</code></pre>

<p>建議先看過 wiki 上的解釋，如果還是不太清楚可以參考這兩個網址：</p>

<ul>
<li><a href="http://mkv.cn/2597/ranking-algorithm-bayesian-average">基于用户投票的排名算法（六）：贝叶斯平均</a></li>
<li><a href="http://www.solagirl.net/sorting-products-by-bayesian-average.html">基於貝葉斯平均的產品排序方法</a></li>
</ul>


<p>這個方法比先前的好多了，前一個對時間的計算相當依賴，而此法卻與時間無關，至少效能好上許多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[寧靜之愛]]></title>
    <link href="http://tonytonyjan.net/2012/07/05/silent-love/"/>
    <updated>2012-07-05T01:29:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/07/05/silent-love</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/love.jpg"></p>

<p>今天母親問了我一個很驚悚的問題：「你會不會怕以後交不到女朋友？」</p>

<p>有一點怕，因為我想要有個家，想有個婚姻，想當個爸爸，我認為這樣我的人生才稱得上是完整。但也因為我想要的是「一位妻子」而非「一位女朋友」，導致我很難找到一個能與我長跑的對象，大多與我同年紀的人，只是想談戀愛而已，甚至有些人根本新手，對於愛情沒有想過很多，怎麼可能會思考到婚姻呢？除非同儕們的腦袋領先自己的年紀二十年，否則很難長遠、認真地看待感情這件事情。</p>

<!-- more -->


<p>年輕人所認為的愛情等於熱戀期，舉凡每天有送早餐、叫起床、吃宵夜、陪對方去做什麼事、講電話超過一個鐘頭的行為，就是熱戀期會有的，而當一方開始要有自己的時間，熱戀期會趨近於平淡，這時就會開始吵架，而吵架內容之空泛且缺乏創意，大概就是圍繞著「你以前都會怎樣，現在怎麼沒有？」之類的主題。</p>

<p>這時候只要雙方有人願意退讓，則可以避得了一時，但隨著吵架頻率越來越頻繁，會有兩個結局：一則分手；二則雙方彼此領悟了愛情真諦，瞭解愛情不是只有熱戀期。</p>

<p>愛情的真諦就是愛情不是只有熱戀期，而長久的愛情也不需要熱戀期。因為愛情的盡頭只會越走越平淡。長久愛情的盡頭是親情，情人走到盡頭終成為家人。雖然人說親情恬淡如水，愛情濃烈如火，但長久的愛情最終也會恬淡如水，這豈不是很有意思？為何長久的感情多是平淡的過著，其來有自，不過就是愛情最終的相處之道彷彿如親人，而親人正是與我們相處大半輩子的人罷了。</p>

<p>我們總不會每天送花給媽媽，但偶爾在母親節或她生日時給點小驚喜，媽媽就會很開心了，反之每天都送花就成不了驚喜。面對情人也一樣，每天黏在一起總有一天會膩，等想要各自有自己的空間時，則又因為過渡不了而吵起來。</p>

<p>在追求兩人世界的精彩同時，別忘了真正的喜悅，不在每天的玫瑰與陪伴，而是埋藏在平淡之中，那些意想不到的驚喜。</p>

<p>此謂寧靜之愛。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TJSlides - a Text Based Slides Generator]]></title>
    <link href="http://tonytonyjan.net/2012/06/25/tjslides-a-text-based-slides-generator/"/>
    <updated>2012-06-25T00:17:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/06/25/tjslides-a-text-based-slides-generator</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/tjslides.png"></p>

<p>Last week, I just realized one of my ideas, named <a href="http://tjslides.herokuapp.com">TJSlides</a>.</p>

<p>TJSlides is a text based slides generator using <a href="http://daringfireball.net/projects/markdown/">Markdown</a> syntax. What you need is a text area, and you can easily make a presentation. I think it&#8217;s cool, isn&#8217;t it?</p>

<p>I had this sudden interesting inspiration last week, then I tried to google this idea and found someone has made this named <a href="https://github.com/bmcmurray/hekyll">Hekyll</a>, however, I don&#8217;t think it&#8217;s convenient enough on account of it&#8217;s dependency on <a href="https://github.com/mojombo/jekyll">Jekyll</a>. I need to run command by hand to generate slides, that&#8217;s too troublesome.</p>

<p>I have no idea how it worth. I just made it when I still think it&#8217;s interesting. =D</p>

<p>Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[N-Gram 斷詞法實做]]></title>
    <link href="http://tonytonyjan.net/2012/06/06/an-n-gram-generator-for-ruby/"/>
    <updated>2012-06-06T17:59:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/06/06/an-n-gram-generator-for-ruby</id>
    <content type="html"><![CDATA[<p>今天心血來潮在 RubyGems 搜尋了一下看有沒有可用的 N-Grams library，確實也給我找到幾個，但可惜的是他們只有針對英文做斷詞，沒有針對中日韓。我們可想像的到英文的斷詞和中文的斷詞是截然不同的，但現在許多文章卻又中英日混雜，面對這種文章，那些 library 起不了什麼作用。</p>

<p>於是用下午的時間我就自己寫了一個來解決這類的問題：</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">TJNGram</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">process</span> <span class="n">n</span><span class="p">,</span> <span class="n">content</span>
</span><span class='line'>    <span class="c1"># matche Chinese, English, Japanes and Korean words</span>
</span><span class='line'>    <span class="n">pattern</span> <span class="o">=</span> <span class="sr">%r((\w+)|([\u3041-\u9FFF]))</span>
</span><span class='line'>    <span class="c1"># record if the token is an English word</span>
</span><span class='line'>    <span class="n">is_english</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># tokenize</span>
</span><span class='line'>    <span class="n">tokens</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="n">content</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="n">pattern</span><span class="p">){</span><span class="o">|</span><span class="n">e</span><span class="p">,</span><span class="n">c</span><span class="o">|</span>
</span><span class='line'>      <span class="n">is_english</span><span class="o">[</span><span class="n">e</span> <span class="o">||</span> <span class="n">c</span><span class="o">]</span> <span class="o">=</span> <span class="n">e</span> <span class="p">?</span> <span class="kp">true</span> <span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>      <span class="n">tokens</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">e</span> <span class="o">||</span> <span class="n">c</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">resault</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="n">tokens</span><span class="o">.</span><span class="n">each_slice</span><span class="p">(</span><span class="n">n</span><span class="p">){</span><span class="o">|</span><span class="n">slice</span><span class="o">|</span>
</span><span class='line'>        <span class="n">key</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="n">pre_state</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>        <span class="n">slice</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">token</span><span class="o">|</span>
</span><span class='line'>          <span class="n">key</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; &quot;</span> <span class="k">if</span> <span class="o">!</span><span class="n">pre_state</span><span class="o">.</span><span class="n">nil?</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">pre_state</span> <span class="o">||</span> <span class="n">is_english</span><span class="o">[</span><span class="n">token</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>          <span class="n">key</span> <span class="o">&lt;&lt;</span> <span class="n">token</span>
</span><span class='line'>          <span class="n">pre_state</span> <span class="o">=</span> <span class="n">is_english</span><span class="o">[</span><span class="n">token</span><span class="o">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">resault</span><span class="o">[</span><span class="n">key</span><span class="o">]</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">tokens</span><span class="o">.</span><span class="n">shift</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">resault</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="http://tonytonyjan.net/blog/tjngram">說明文件</a></li>
</ul>


<p>演算法簡單，程式碼相當短，比較麻煩的地方在 pattern 裡頭，對於 unicode 範圍的定義花了點功夫去做調整，可濾掉標點符號（大部分，仍有落網之魚），只取出中日韓的單字和英文單字。</p>

<p>這段程式碼已經放在 <a href="https://github.com/tonytonyjan/TJNGram">Github</a> 和 <a href="https://rubygems.org/gems/TJNGram">RugyGems</a> 上面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大兜的 Chrome Extension 學習筆記]]></title>
    <link href="http://tonytonyjan.net/2012/05/25/get-start-with-chrome-extension/"/>
    <updated>2012-05-25T12:12:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/05/25/get-start-with-chrome-extension</id>
    <content type="html"><![CDATA[<p>要寫 Chrome Extension 的先決條件是擁有網頁基礎，因為寫 Chrome Extension 會用到 HTML、Javascript、CSS，如果還不會這些東西，建議在學習 Chrome Extension 之前，先把這些技能磨練好。</p>

<p>這篇介紹會針對 Chrome Extension 的 manifest 結構、檔案結構以及一些常用到的部份做簡單的介紹，包括 Browser Action、Page Action、Background Page 和 Content Script。</p>

<!-- more -->


<h2>架構簡介</h2>

<h3>Background Pages</h3>

<p>大多外掛會有一個 background page 常駐在背景，可能是一個 HTML 或者 javascript 檔，外掛的功能與邏輯都被定義在此，然後透過 API 與 UI（browser actions 或 page actions）做溝通。</p>

<p><img src="http://tonytonyjan.net/images/arch-1.gif"></p>

<h3>UI Pages</h3>

<p>Chrome Extension 的 UI 介面使用的是 HTML，例如我們可以在 browser action 定義一個 popup.html ：</p>

<p><img src="http://tonytonyjan.net/images/arch-2.gif"></p>

<p>Chrome Extension UI：
*   Browser Actions
*   Page Actions
*   Desktop Notifications
*   Omnibox
*   Override Pages
*   Options Pages
*   Context Menu：右鍵出現的內容</p>

<h2>Chrome Extension = Manifest + Web Assets</h2>

<p>一個 Chrome Extension 由一個 <code>manifest.json</code> 和其他網頁檔案組成，檔案目錄大概會像這個樣子：</p>

<p><img src="http://tonytonyjan.net/images/chrome-ext.png"></p>

<p>除了 <code>manifest.json</code> 之外，其餘的檔案都是可選的，所以一個最簡單的（不具任何功能的） Chrome Extension 可以只由一個 <code>manifest.json</code> 組成，其他的檔案需要與否則視 <code>manifest.json</code> 裡頭的設定。Chrome Extension 之於 <code>manifest.json</code> 就像人之於個資一樣，裡面描述所有關於這個 Extension 的資料，包括名稱、敘述、版本、語言、使用的圖片等等。</p>

<h3>manifest.json 簡介</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">//</span> <span class="err">必要</span>
</span><span class='line'>  <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;My Extension&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;versionString&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;manifest_version&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">建議，非必要</span>
</span><span class='line'>  <span class="nt">&quot;description&quot;</span><span class="p">:</span> <span class="s2">&quot;A plain text description&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;icons&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="err">...</span> <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;default_locale&quot;</span><span class="p">:</span> <span class="s2">&quot;en&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">選一個</span>
</span><span class='line'>  <span class="nt">&quot;browser_action&quot;</span><span class="p">:</span> <span class="p">{</span><span class="err">...</span><span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;page_action&quot;</span><span class="p">:</span> <span class="p">{</span><span class="err">...</span><span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;theme&quot;</span><span class="p">:</span> <span class="p">{</span><span class="err">...</span><span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;app&quot;</span><span class="p">:</span> <span class="p">{</span><span class="err">...</span><span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">//</span> <span class="err">其他視情況需要的設定</span>
</span><span class='line'>  <span class="nt">&quot;background&quot;</span><span class="p">:</span> <span class="p">{</span><span class="err">...</span><span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;chrome_url_overrides&quot;</span><span class="p">:</span> <span class="p">{</span><span class="err">...</span><span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;content_scripts&quot;</span><span class="p">:</span> <span class="p">[</span><span class="err">...</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;content_security_policy&quot;</span><span class="p">:</span> <span class="s2">&quot;policyString&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;file_browser_handlers&quot;</span><span class="p">:</span> <span class="p">[</span><span class="err">...</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;homepage_url&quot;</span><span class="p">:</span> <span class="s2">&quot;http://path/to/homepage&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;incognito&quot;</span><span class="p">:</span> <span class="s2">&quot;spanning&quot;</span> <span class="err">or</span> <span class="s2">&quot;split&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;intents&quot;</span><span class="p">:</span> <span class="p">{</span><span class="err">...</span><span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;key&quot;</span><span class="p">:</span> <span class="s2">&quot;publicKey&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;minimum_chrome_version&quot;</span><span class="p">:</span> <span class="s2">&quot;versionString&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;nacl_modules&quot;</span><span class="p">:</span> <span class="p">[</span><span class="err">...</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;offline_enabled&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;omnibox&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="nt">&quot;keyword&quot;</span><span class="p">:</span> <span class="s2">&quot;aString&quot;</span> <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;options_page&quot;</span><span class="p">:</span> <span class="s2">&quot;aFile.html&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;permissions&quot;</span><span class="p">:</span> <span class="p">[</span><span class="err">...</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;plugins&quot;</span><span class="p">:</span> <span class="p">[</span><span class="err">...</span><span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;requirements&quot;</span><span class="p">:</span> <span class="p">{</span><span class="err">...</span><span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;update_url&quot;</span><span class="p">:</span> <span class="s2">&quot;http://path/to/updateInfo.xml&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;web_accessible_resources&quot;</span><span class="p">:</span> <span class="p">[</span><span class="err">...</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>version</h4>

<p>代表該 Extension 的版本，最多由四個整數組成，並且用 <code>.</code> 分開，數字必須介在 0 到 65535 之間，而且不可以以 0 當開頭，舉例：</p>

<ul>
<li>錯誤：

<ul>
<li>&#8220;version&#8221;: &#8220;99999&#8221;</li>
<li>&#8220;version&#8221;: &#8220;032&#8221;</li>
</ul>
</li>
<li>正確

<ul>
<li>&#8220;version&#8221;: &#8220;1&#8221;</li>
<li>&#8220;version&#8221;: &#8220;1.0&#8221;</li>
<li>&#8220;version&#8221;: &#8220;2.10.2&#8221;</li>
<li>&#8220;version&#8221;: &#8220;3.1.2.4567&#8221;</li>
</ul>
</li>
</ul>


<h4>manifest_version</h4>

<p>一個代表 manifest file 格式版本的整數，如果使用的是 Chrome 18 以上，則應該設定成 2。</p>

<pre><code>"manifest_version": 2
</code></pre>

<p>可以在<a href="http://code.google.com/chrome/extensions/manifestVersion.html">這裡</a>查閱版本 1 和 2 之間的差別。</p>

<h3>icons</h3>

<p>這邊可以定義 Chrome extension 的 logo。盡量是 PNG 格式，因為 Webkit 對 PNG 的透明度轉換最好。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'>  <span class="nt">&quot;icons&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;16&quot;</span><span class="p">:</span> <span class="s2">&quot;icon16.png&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;48&quot;</span><span class="p">:</span> <span class="s2">&quot;icon48.png&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;128&quot;</span><span class="p">:</span> <span class="s2">&quot;icon128.png&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>128x128：用在安裝時</li>
<li>48x48：在 <code>chrome://extensions</code> 裡顯示</li>
<li>16x16：favicon</li>
</ul>


<h2>Browser Action</h2>

<p><img src="http://tonytonyjan.net/images/browser-action.png"></p>

<p>Browser action 適合在需要一個常駐的功能放在 Google 工具列時使用，可以加上 tooltip、badge（例如收到幾封信） 和 popup。</p>

<h3>Manifest</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'>  <span class="nt">&quot;browser_action&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;default_icon&quot;</span><span class="p">:</span> <span class="s2">&quot;icon19.png&quot;</span><span class="p">,</span>     <span class="err">//</span> <span class="err">可選</span>
</span><span class='line'>    <span class="nt">&quot;default_title&quot;</span><span class="p">:</span> <span class="s2">&quot;Tooltip title&quot;</span><span class="p">,</span> <span class="err">//</span> <span class="err">可選</span>
</span><span class='line'>    <span class="nt">&quot;default_popup&quot;</span><span class="p">:</span> <span class="s2">&quot;popup.html&quot;</span>     <span class="err">//</span> <span class="err">可選，滑鼠單擊會呈現的內容</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Page Action</h2>

<p><img src="http://tonytonyjan.net/images/page-action.png"></p>

<p>類似 browser action，差別在於 page action 用於特定網頁才需要的功能，由於 browser action 常駐時會佔用一部份的記憶體，如果你的功能需要在特定狀況下才啟用，建議用 page action 取代 browser action。常見應用是 RSS 訂閱（只有網頁提供 RSS 時才啟用）。</p>

<h3>Manifest</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'>  <span class="nt">&quot;page_action&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;default_icon&quot;</span><span class="p">:</span> <span class="s2">&quot;icons/foo.png&quot;</span><span class="p">,</span> <span class="err">//</span> <span class="err">可選</span>
</span><span class='line'>    <span class="nt">&quot;default_title&quot;</span><span class="p">:</span> <span class="s2">&quot;Tooltip title&quot;</span><span class="p">,</span>    <span class="err">//</span> <span class="err">可選</span>
</span><span class='line'>    <span class="nt">&quot;default_popup&quot;</span><span class="p">:</span> <span class="s2">&quot;popup.html&quot;</span>    <span class="err">//</span> <span class="err">可選，滑鼠單擊會呈現的內容</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>設計原則：</p>

<ul>
<li>在功能只針對部份網頁時，使用 page action。</li>
<li>如果功能需要常駐在每個網頁，使用 browser action。</li>
</ul>


<h2>Content Script</h2>

<p>這是筆者認為最有趣的部份，content script 顧名思義可以在頁面裡面嵌入 javascript，他們可以透過 DOM 得知使用者瀏覽的頁面的內容，甚至可以改變這些內容。</p>

<p>這些是 content script 可以做到的事：</p>

<ul>
<li>爬出所有沒有 <code>&lt;a&gt;</code> 的 URL，為他們加上 <code>&lt;a&gt;</code></li>
<li>把字放大</li>
<li>去掉廣告</li>
</ul>


<p>基本上可以在 chrome 開發人員視窗中能做到的事情，content script 都可以做到。但這功能看似強大，卻有些限制：</p>

<ul>
<li><strong>無法</strong>呼叫 <code>chrome.* APIs</code> 這類的 API（<code>chrome.extension</code> 除外）</li>
<li><strong>無法</strong>使用 extension page 上的變數和函式（例如 background pages）</li>
<li><strong>無法</strong>使用網頁上的變數和函式</li>
</ul>


<p>但這些限制可以透過 <code>chrome.extension</code> 與 extension pages 做溝通。</p>

<h2>Manifest</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'>  <span class="nt">&quot;content_scripts&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;matches&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;http://www.google.com/*&quot;</span><span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;css&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;mystyles.css&quot;</span><span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;js&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;jquery.js&quot;</span><span class="p">,</span> <span class="s2">&quot;myscript.js&quot;</span><span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>matches</h3>

<p>常用的格式：</p>

<ul>
<li><p>http://127.0.0.1/*</p>

<p>指定某個 host 下的所有 path</p></li>
<li><p>http://example.org/foo/bar.html</p>

<p>指定某個連結</p></li>
<li><p>&lt;all_urls&gt;</p>

<p>在所有的頁面（這樣的狀況不多，但惡作劇的時候可能會用到）</p></li>
</ul>


<p>其他用法<a href="http://code.google.com/chrome/extensions/match_patterns.html">詳見此</a></p>

<h2>Background Pages</h2>

<p>一個 extension 通常要有一個常駐執行的 script，用來控制 Browser UI（page action 或 browser action），例如我們會需要一個常駐的程式去監聽 FB 是否有新的訊息，如果聽到則在 browser actoin 上面顯示 badge，收信亦如是。</p>

<p>同時如果 content script 需要與 UI 做溝通，要定義的 function 都放在這裡。</p>

<h3>Manifest</h3>

<p>如果內容很少，可以寫在一個檔案即可：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'>  <span class="nt">&quot;background&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;scripts&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;background.js&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果內容很多，要分成好幾個 <code>.js</code> 檔，則改用以下方式並配合 <code>&lt;script&gt;</code> 標籤：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'>  <span class="nt">&quot;background&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;page&quot;</span><span class="p">:</span> <span class="s2">&quot;background.html&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="err">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[冰冰涼涼的 Ju-Ju]]></title>
    <link href="http://tonytonyjan.net/2012/05/04/freeze-the-balls/"/>
    <updated>2012-05-04T13:40:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/05/04/freeze-the-balls</id>
    <content type="html"><![CDATA[<p><img src="http://tonytonyjan.net/images/ice-ball.jpg"></p>

<p>確切時間已經記不得了，似乎是小三暑假時發生的事情吧。</p>

<p>我們都知道當在劇烈運動過後，為了對付隔天的肌肉酸痛，通常就會拿出每個家裡幾乎都會有的法寶：酸痛藥膏。是的，就塗在酸痛的皮膚上，冰冰涼涼，除了舒緩之外，就是舒服了。</p>

<p>而我當初年少不懂事，看到什麼都當玩具，不外乎酸痛藥膏竟然也沒問題。那天因為天氣很熱，且身形長得快，已經無法將自己關在冰箱，我靈機一動想到以前媽媽有幫我塗過一種藥膏，記得塗完後會感覺冰冰涼涼，心想只要找到這個，如果再加上電風扇加持，哇！那一定暑氣全消吧！</p>

<p>我一邊心裡竊喜自己是天才，一邊拿起酸痛藥膏在身上亂塗：手上、肚子、腿上。果不其然，三兩下雙手所及之處，全都感覺冰冰涼涼，我就舒爽地躺在床上，享受著盛夏的午後時光，殊不知災難即將降臨。</p>

<p>是的，故事本應這麼圓滿結束，只是我太大意了，導致接下來發生的事情會讓我後悔莫及。</p>

<h3><strong>我竟然把藥膏塗在 Ju-Ju 上面！</strong></h3>

<!-- more -->


<p>不知道各位有沒有看過猴子走路，就算有看過，我論閣下也沒見識過猴子一邊走還一邊顏面抽搐加流眼淚，而且偶爾還會跳八家將。哇……你心想如果這隻若不是地表最強之猴子，就是猴子壞掉了。而如果你當時在現場看到我，你一定還會相信只要肯努力，其實人也可以做得到。</p>

<p>我就這麼折騰了約莫半個鐘頭，終於獲得一些舒緩（與上述舒緩相反的舒緩），從外表已經看不出剛剛有發生大霹靂。</p>

<p>就在這時我弟弟出現了。</p>

<p>「哥，你在幹麼？」</p>

<p>「塗這個啊，超涼的而且很舒服，你要不要試試看？」</p>

<p>（塗塗塗）</p>

<p>「真的耶！」</p>

<p>「告訴你，塗在『那裡』會更舒服，真的，不騙你，我剛剛有塗過。」</p>

<p>然後他照做了。</p>

<p><img src="http://tonytonyjan.net/images/trollface.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[List Published or Unpublished Posts in Octopress]]></title>
    <link href="http://tonytonyjan.net/2012/05/02/list-all-posts-rake-task-for-octopress/"/>
    <updated>2012-05-02T13:36:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/05/02/list-all-posts-rake-task-for-octopress</id>
    <content type="html"><![CDATA[<h2>What&#8217;s the Problem?</h2>

<p>We may leave some draft posts in <code>_posts</code> directory, but it comes a problem when we are going to find whether the post is published or not by reading throuh filenames in the future.</p>

<p>To solve this, I created this rake task. It will list all posts each line, and prepend an asterisk if it&#8217;s published. Just append it in your <code>Rakefile</code> to make it works.</p>

<h3>Usage</h3>

<pre><code>rake list_posts
rake list_posts[pub|unpub]
</code></pre>

<div><script src='https://gist.github.com/2574782.js'></script>
<noscript><pre><code># usage rake new_page[my-new-page] or rake new_page[my-new-page.html] or rake new_page (defaults to &quot;new-page.markdown&quot;)
desc &quot;List all posts with an asterisk if it's published. Advanced usage: 'rake list_posts[pub|unpub]'&quot;
task :list_posts, :type do |t, args|
  type = args.type
  
  result = &quot;&quot;
  Dir.glob(&quot;#{source_dir}/#{posts_dir}/*.markdown&quot;).sort.each do |post|
    file = File.read(post)
    file =~ /^(---\s*\n.*?\n?)^(---\s*$\n?)/m
    data = YAML.load($1)
    
    case type
    when &quot;pub&quot; then 
      result &lt;&lt; &quot;#{File.basename(post)}\n&quot; if data['published'] || data['published'] == nil
    when &quot;unpub&quot;
      result &lt;&lt; &quot;#{File.basename(post)}\n&quot; if data['published'] == false
    else
      status = data['published'] || data['published'] == nil ? '*' : ' '
      result &lt;&lt; &quot;#{status} #{File.basename(post)}\n&quot;
    end
  end
  puts result
end</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[將 Octopress Page 依照標題自動索引]]></title>
    <link href="http://tonytonyjan.net/2012/05/01/indexer-for-octopress/"/>
    <updated>2012-05-01T13:30:00+08:00</updated>
    <id>http://tonytonyjan.net/2012/05/01/indexer-for-octopress</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://tonytonyjan.net/blog/octopress-indexer">範例展示、文件</a></li>
<li><a href="https://gist.github.com/2565249/6151c81f7af333d5c1d9dd0b2bdcba2c7a966dca">gist</a></li>
</ul>


<h2>用法懶人包</h2>

<ol>
<li>下載 <a href="https://gist.github.com/gists/2565249/download">Indexer for Octopress</a>。</li>
<li>將 <code>indexer.rb</code> 複製到 <code>plugins</code> 目錄下。</li>
<li><p>新增 <code>source\_includes\custom\asides\indexer.html</code>。</p>

<pre><code>{% if page.indexer == true %}
  &lt;section&gt;
  &lt;h1&gt;Catalog&lt;/h1&gt;
  {{ page.indexer_aside }}
  &lt;/section&gt;
{% else %}
  {% if site.page_asides.size %}
    {% include_array default_asides %}
  {% endif %}
{% endif %}
</code></pre></li>
<li><p>編輯 <code>_config.yml</code>。</p>

<pre><code># Each layout uses the default asides, but they can have their own asides instead. Simply uncomment the lines below
# and add an array with the asides you want to use.
# blog_index_asides:
# post_asides:
page_asides: [custom/asides/indexer.html] # 加上這個
</code></pre></li>
<li><p>完成！之後只要在你需要索引的 page 上方 YAML 區塊加上 <code>indexer: true</code>，右方欄位就會自己索引了。</p></li>
</ol>


<!-- more -->


<h2>為什麼有這種需求？</h2>

<p>有想過用 Octopress 寫說明文件，雖然用 Markdown 可以很方便的杜撰，但文章只要一長了，要找標題特定的內容不用滑鼠滾輪一個一個找，就得用搜尋的，而且無法一次觀看到整篇文章的大綱。這時候最適合用索引來解決這個問題，而索引的優點之多，我想有寫過教學文件或是 wiki 的人應該是最清楚不過了。</p>

<p>但是 Octopress 如果要做到這樣，你要嘛用 Textile 取代 Mardown，如果用 Markdown 就還要徒手寫 tag，例如：</p>

<pre><code>&lt;h2 id="getting-start"&gt;起步走&lt;/h2&gt;
</code></pre>

<p><strong>這會讓寫作的爽度降低。</strong></p>

<p>但有人可能會說改用 Textile 就好了，確實，但麻煩的在後面：就算你用 Textile 好了，你還得為你的文件特地寫一個 aside，裡面有個兩層的 list，每個標題都有 <code>&lt;a&gt;</code> 包起來，還得自己寫 <code>href="#xxx"</code>。</p>

<p><strong>這更讓寫作的爽度降到冰點。</strong></p>

<p>好吧，萬一你是個很有耐心的人，你確實的在文章的 heading 都加上了 ID，且也自己寫了一個 asides 放在 <code>source\_includes\custom\asides\</code> 之下。但當你要設定 <code>_config.yml</code> 時發現：</p>

<pre><code>page_asides: [custom/asides/xxx.html]
</code></pre>

<p><img src="http://tonytonyjan.net/images/dead-eyes.jpg"></p>

<p>原來 page asides 是全局的，意思是接下來要處理的問題：你要怎麼在不影響其他的 page 的情況下，在特定 page 顯示特定 page？</p>

<p>這時候我就期望尋求一個方法，讓寫作只要專心在 heading 的編排就好，不用理會索引這樣瑣碎的工作。</p>

<h2>你寫這個幹麼？</h2>

<p>當然是為了解決自己問題（但也有可能同時是別人的問題）。</p>

<p>因為翻譯 Rails Guide 的關係，這幾天常常光顧 <a href="https://github.com/lifo/docrails">docrails</a>，以及 <a href="https://github.com/rails/rails">Rails</a> 的倉庫。對 Rilas Guide 生成文件的方式感到好奇，以 <a href="http://guides.rubyonrails.org/getting_started.html">Getting Start with Rails</a> 這篇為例吧，右方的索引全部對應到左方的 h3 和 h4，也就是如果有個 heading 長這樣：</p>

<pre><code>&lt;h3 id="guide-assumptions"&gt;1 Guide Assumptions&lt;/h3&gt;
</code></pre>

<p>那麼右方所有就會有對應的</p>

<pre><code>&lt;li&gt;&lt;a href="#guide-assumptions"&gt;Guide Assumptions&lt;/a&gt;&lt;/li&gt;
</code></pre>

<p>但實際上，在 Textile 文件中 他們實際是這樣寫的：</p>

<pre><code>h3. Guide Assumptions
</code></pre>

<p>研究了他們的原始碼，發現 Rails Guide 的 generator 在 render 之前做了這兩件事情：</p>

<ol>
<li><p>將所有的 heading 賦予同名 id。</p>

<p>也就是將 <code>h3. Guide Assumptions</code> 替換成 <code>h3(#guide-assumptions). Guide Assumptions</code>。</p></li>
<li><p>遞迴的方式產生清單。</p>

<p>可以分析 <code>&lt;h3&gt;</code> 下的 <code>&lt;h4&gt;</code>，做出最多兩層的索引清單放在右方。</p></li>
</ol>


<p>我馬上想到的一件事情就是，這功能可以用在 Octopress 上。</p>
]]></content>
  </entry>
  
</feed>
